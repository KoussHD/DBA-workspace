
I. ENABLE EXTENDED AUDITING:

SQL> alter system set audit_trail='DB','EXTENDED' scope=spfile;

System altered.

SQL> shutdown immediate

ORACLE instance shut down.

SQL> startup


View	                                                  Description
----------------------------------------- -----------------------------------------------------------------------------------------------------------------
STMT_AUDIT_OPTION_MAP                       Contains information about auditing option type codes. Created by the SQL.BSQ script at CREATE DATABASE time.

AUDIT_ACTIONS                               Contains descriptions for audit trail action type codes.

ALL_DEF_AUDIT_OPTS                          Contains default object-auditing options that will be applied when objects are created.

DBA_STMT_AUDIT_OPTS                         Describes current system auditing options across the system and by user.

DBA_PRIV_AUDIT_OPTS                         Describes current system privileges being audited across the system and by user.

DBA_OBJ_AUDIT_OPTS/USER_OBJ_AUDIT_OPTS      Describes auditing options on all objects. The USER view describes auditing options on all objects owned by the current user.

DBA_AUDIT_TRAIL/USER_AUDIT_TRAIL            Lists all audit trail entries. The USER view shows audit trail entries relating to current user.


DBA_AUDIT_OBJECT/USER_AUDIT_OBJECT
Contains audit trail records for all objects in the system. The USER view lists audit trail records for statements concerning objects that are accessible to the current user.


DBA_AUDIT_SESSION/USER_AUDIT_SESSION 
Lists all audit trail records concerning CONNECT and DISCONNECT. The USER view lists all audit trail records concerning connections and disconnections for the current user.

DBA_AUDIT_STATEMENT/USER_AUDIT_STATEMENT
Lists audit trail records concerning GRANT, REVOKE, AUDIT, NOAUDIT, and ALTER SYSTEM statements throughout the database, or for the USER view, issued by the user.


DBA_AUDIT_EXISTS
Lists audit trail entries produced BY AUDIT NOT EXISTS.

DBA_AUDIT_POLICIES 
Shows all the auditing policies on the system.

DBA_FGA_AUDIT_TRAIL
Lists audit trail records for value-based auditing.

DBA_COMMON_AUDIT_TRAIL
Combines standard and fine-grained audit log records, and includes SYS and mandatory audit records written in XML format.




=====================XML======================================

select DB_USER,USER_HOST,min(EXTENDED_TIMESTAMP)"first_logon",max(EXTENDED_TIMESTAMP)"last_logon" from 
v$xml_audit_trail 
WHERE trunc(EXTENDED_TIMESTAMP)=trunc(systimestamp)
AND ACTION=100 and DB_USER in ('U_871111328','U_880512850','U_890408567','U_890509813','U_910208186','U_811014774','U_830114680','U_840517932','U_840718703'
,'U_840813073','U_841016369','U_841115894','U_850213282','U_860310780','U_860313309','U_860317753','U_870410706')group by DB_USER,USER_HOST ;


SELECT  DB_USER,USER_HOST,EXTENDED_TIMESTAMP from v$xml_audit_trail 
where round (EXTENDED_TIMESTAMP,'dd-mm-yyyy') ='01-02-2013'; 

SELECT count(1),DB_USER,USER_HOST from v$xml_audit_trail 
where trunc(EXTENDED_TIMESTAMP)=trunc(systimestamp) group by db_user having count(1)>900;

SELECT GRANTED_ROLE,decode(action,100,'LOGON',101,'LOGOFF',102,'CLEAN LOGGOF',action) ACTION,count(1) "TOTAL" from v$xml_audit_trail x join dba_role_privs r  on(x.db_user=r.grantee) where trunc(EXTENDED_TIMESTAMP)=trunc(systimestamp-1)and action!=55 and granted_role not like 'ORA%' group by granted_role,action having count(1) >900 order by 1;


SELECT DB_USER,OS_HOST,granted_role,decode(action,100,'LOGON',101,'LOGOFF',102,'CLEAN LOGGOF',action),count(1)from v$xml_audit_trail x join dba_role_privs r  on(x.db_user=r.grantee) where trunc(EXTENDED_TIMESTAMP)=trunc(systimestamp)and action!=55 and granted_role not like 'ORA%' group by granted_role,action,DB_USER,OS_HOST having count(1) >900 order by 1;

SELECT GRANTED_ROLE, min(logon_time), max(logon_time), count(1) from v$session join dba_role_privs on (grantee = username)
where username is not null and granted_role not like 'ORA%' and logon_time >sysdate-10/1440
group by granted_role
order by 4 desc

SELECT GRANTED_ROLE,min(sample_time),max(sample_time),count(*),trunc(sample_time) from dba_hist_active_sess_history join dba_users using (user_id)
join dba_role_privs on (grantee=username) group by trunc(sample_time),granted_role
order by 5,4;

------------------------------------------------------
FOR a in 0 1 2 3 4 5 6 7 8 9
DO
mv sgmulb_ora_$a* /APPL/ORACLE/staging/audit_SGMULB/.
done
------------------------------------------------------
The three main views are shown below.

DBA_AUDIT_TRAIL - Standard auditing only (from AUD$).
DBA_FGA_AUDIT_TRAIL - Fine-grained auditing only (from FGA_LOG$).
DBA_COMMON_AUDIT_TRAIL - Both standard and fine-grained auditing.


parameter
ALTER SYSTEM SET audit_trail=db SCOPE=SPFILE;
AUDIT_TRAIL = { none | os | db | db,extended | xml | xml,extended }

select /*+ parallel(sys.aud$,6) */ count(*), decode(ACTION#,'100','LOGON','3','SELECT','49','ALTER SYSTEM','101','LOGOFF','7','DELETE',ACTION#) "ACTION" from sys.aud$ group by ACTION#

select DB_USER,count(*)||' LOGON',USERHOST from dba_common_audit_trail where ACTION='100' and trunc(EXTENDED_TIMESTAMP)=trunc(sysdate) group by DB_USER,ACTION,USERHOST;

hf53es@AGINFA.ING.BE> desc dba_common_audit_trail
 Name
 ---------------------------------------------------------
-
 AUDIT_TYPE
 SESSION_ID
 PROXY_SESSIONID
 STATEMENTID
 ENTRYID
 EXTENDED_TIMESTAMP
 GLOBAL_UID
 DB_USER
 CLIENT_ID
 ECONTEXT_ID
 EXT_NAME
 OS_USER
 USERHOST
 OS_PROCESS
 TERMINAL
 INSTANCE_NUMBER
 OBJECT_SCHEMA
 OBJECT_NAME
 POLICY_NAME
 NEW_OWNER
 NEW_NAME
 ACTION
 STATEMENT_TYPE
 AUDIT_OPTION
 TRANSACTIONID
 RETURNCODE
 SCN
 COMMENT_TEXT
 SQL_BIND
 SQL_TEXT
 OBJ_PRIVILEGE
 SYS_PRIVILEGE
 ADMIN_OPTION
 OS_PRIVILEGE
 GRANTEE
 PRIV_USED
 SES_ACTIONS
 LOGOFF_TIME
 LOGOFF_LREAD
 LOGOFF_PREAD
 LOGOFF_LWRITE
 LOGOFF_DLOCK
 SESSION_CPU
 OBJ_EDITION_NAME
 
 
 
 2---------------TOTAL COUNT of connected users per APPLICATION having more than
SELECT granted_role,
         DECODE (action,
                 100, 'LOGON',
                 101, 'LOGOFF',
                 102, 'CLEAN LOGGOF',
                 action)
            ACTION,
         COUNT (1) "TOTAL"
    FROM v$xml_audit_trail x JOIN dba_role_privs r ON (x.db_user = r.grantee)
   WHERE     TRUNC (EXTENDED_TIMESTAMP) = TRUNC (SYSTIMESTAMP-3)
         AND action != 55
         AND granted_role NOT LIKE 'ORA%'
GROUP BY granted_role, action
  HAVING COUNT (1) >1000
ORDER BY 1,3;


1--------------------------TOTAL COUNT per USER/APPLICATION/HOST  having more than 900 connection


SELECT DB_USER,
         OS_HOST,
         granted_role,
         DECODE (action,
                 100, 'LOGON',
                 101, 'LOGOFF',
                 102, 'CLEAN LOGGOF',
                 action) ACTION,
         COUNT (1)
    FROM v$xml_audit_trail x JOIN dba_role_privs r ON (x.db_user = r.grantee)
   WHERE     TRUNC (EXTENDED_TIMESTAMP) = TRUNC (SYSTIMESTAMP-3)
         AND action != 55
         AND granted_role NOT LIKE 'ORA%'
GROUP BY granted_role,
         action,
         DB_USER,
         OS_HOST
  HAVING COUNT (1) > 900
ORDER BY 1,5;

col USERNAME for a25
col USERHOST for a25
col terminal for a25
col SQL_TEXT for a50
col OS_USERNAME for a25

SELECT USERNAME,
         OS_USERNAME,
         USERHOST,
         TERMINAL,
          ACTION_NAME, TIMESTAMP,SQL_TEXT ---12c
    FROM dba_audit_trail x
    WHERE    TRUNC (EXTENDED_TIMESTAMP) >= TRUNC (SYSTIMESTAMP-5)
        -- AND  action != 55
        -- AND
         AND USERNAME IN (  'MCQ_ADMIN' )
         ORDER BY 1,6 ;
         
         
         
          select  USERHOST,DECODE (action#,
                 100, 'LOGON',
                 101, 'LOGOFF',
                 102, 'CLEAN LOGGOF',
                 action#) ACTION#,SQLTEXT from sys.aud$;
                 
12c:
SELECT event_timestamp,
       dbusername,
       action_name,
       object_schema,
       object_name
FROM   unified_audit_trail
WHERE  dbusername LIKE 'KH85124%'
ORDER BY event_timestamp;                 
                 
====================================ACTIVATE AUDIT


1. user
AUDIT ALL BY SCOTT BY ACCESS;
AUDIT SELECT TABLE, UPDATE TABLE, INSERT TABLE, DELETE TABLE BY Scott BY ACCESS;
AUDIT EXECUTE PROCEDURE BY Scott BY ACCESS;
2. session
AUDIT SESSION BY ACCESS;
AUDIT ALL STATEMENTS IN SESSION CURRENT BY ACCESS WHENEVER NOT SUCCESSFUL;

3.table
AUDIT SELECT, INSERT, DELETE ON jward.dept
     BY ACCESS  WHENEVER SUCCESSFUL;
         
Example 9-8 Using NOAUDIT to Remove Session and SQL Statement Auditing

NOAUDIT session;
NOAUDIT session BY preston, sebastian;
NOAUDIT DELETE ANY TABLE;
NOAUDIT SELECT TABLE, INSERT TABLE, DELETE TABLE, EXECUTE PROCEDURE;   

4. table
NOAUDIT DELETE ON emp;
NOAUDIT SELECT, INSERT, DELETE   ON jward.dept;
+++++++++++++++++++++
12c: Unified auditing
+++++++++++++++++++++

A- Unified Audit Trail Administration:
Unified auditing works by default, so you don't need to do anything to get started.
The default settings are OK. You will probably only have to focus on your specific audit policies.
Setting up an archival and purging process will need some thought, but you will probably only do this once in the lifetime of your database, so don't get scared off by this aspect of auditing.
1. check Pure unified auditing :
SELECT value FROM v$option WHERE parameter = 'Unified Auditing';

VALUE
---------------- 
FALSE     (mixed mode not pure)

2. Enable Pure Unified Auditing

UNIX:
sqlplus / as sysdba <<EOF
   SHUTDOWN IMMEDIATE;
    EXIT
EOF

cd $ORACLE_HOME/rdbms/lib
make -f ins_rdbms.mk uniaud_on ioracle

sqlplus / as sysdba <<EOF
STARTUP;
EXIT
EOF

WINDOWS:  turning the services off and moving the relevant DLL
Rem Enable
%ORACLE_HOME%/bin/orauniaud12.dll.dbl file to %ORACLE_HOME%/bin/orauniaud12.dll

2.2 Disable Pure mode
UNIX:
same except for the link command : make -f ins_rdbms.mk uniaud_off ioracle 
 
Windows :  turning the services off and moving the relevant DLL
Rem Disable
%ORACLE_HOME%/bin/orauniaud12.dll file to %ORACLE_HOME%/bin/orauniaud12.dll.dbl

Create Policy
--------------

CREATE AUDIT POLICY test_audit_policy
  PRIVILEGES SELECT ANY TABLE, SELECT ANY TRANSACTION,EXECUTE ANY PROCEDURE,CREATE ANY TABLE,CREATE ANY TRIGGER,CREATE ANY VIEW
  WHEN    'SYS_CONTEXT(''USERENV'', ''SESSION_USER'') = ''KH85124'''
  EVALUATE PER SESSION
  CONTAINER = CURRENT;

AUDIT POLICY test_audit_policy;


SET LINESIZE 200
COLUMN audit_option FORMAT A25
COLUMN condition_eval_opt FORMAT A10
COLUMN audit_condition FORMAT A50

SELECT audit_option,
       condition_eval_opt,
       audit_condition
FROM   audit_unified_policies
WHERE  policy_name = 'TEST_AUDIT_POLICY';

AUDIT_OPTION              CONDITION_ AUDIT_CONDITION
------------------------- ---------- --------------------------------------------------
SELECT ANY TRANSACTION    SESSION    SYS_CONTEXT('USERENV', 'SESSION_USER') = 'KH85124'
CREATE ANY TRIGGER        SESSION    SYS_CONTEXT('USERENV', 'SESSION_USER') = 'KH85124'
EXECUTE ANY PROCEDURE     SESSION    SYS_CONTEXT('USERENV', 'SESSION_USER') = 'KH85124'
CREATE ANY VIEW           SESSION    SYS_CONTEXT('USERENV', 'SESSION_USER') = 'KH85124'
SELECT ANY TABLE          SESSION    SYS_CONTEXT('USERENV', 'SESSION_USER') = 'KH85124'
CREATE ANY TABLE          SESSION    SYS_CONTEXT('USERENV', 'SESSION_USER') = 'KH85124'

---
COLUMN event_timestamp FORMAT A30
COLUMN dbusername FORMAT A10
COLUMN action_name FORMAT A20
COLUMN object_schema FORMAT A10
COLUMN object_name FORMAT A20

SELECT event_timestamp,
       dbusername,
       action_name,
       object_schema,
       object_name
FROM   unified_audit_trail
WHERE  dbusername = 'KH85124'
ORDER BY event_timestamp;

3. Disable the policy and drop it.
----------------------------------
NOAUDIT POLICY test_audit_policy;

DROP AUDIT POLICY test_audit_policy;