System Stats:
A- Gathering noworkload stats builtin with Oracle 
EXEC DBMS_STATS.gather_system_stats;
B- Workload: When initiated using the start/stop or interval parameters .accurate idea of the performance of the system. If workload statistics are present, they will be used in preference to noworkload statistics.

Collect System Statistics for OLTP:
-- Manually start and stop to sample a representative time (several hours) of system activity.
EXEC DBMS_STATS.gather_system_stats('start');
EXEC DBMS_STATS.gather_system_stats('stop');

-- Sample from now until a specific number of minutes.
exec DBMS_STATS.gather_system_stats('interval', interval => 120);  --minutes 

Transfering Stats:
====================                                                                           
It is possible to transfer statistics between servers allowing consistent execution plans between servers with varying amounts of data. 
First 1. Create a table for OLTP statistics:
SQL> execute DBMS_STATS.CREATE_STAT_TABLE ('SYS','OLTP_stats','USERS');    ---table,tablespace remove to make it user's default
Second 2. The statistics must be collected into a statistics table. 
exec DBMS_STATS.GATHER_SYSTEM_STATS(gathering_mode => 'INTERVAL', interval => 180, stattab => 'OLTP_stats', statid => 'OLTP');
3. Transfer the OLTP statistics from OLTP_STATS table to the dictionary tables:
SQL> execute DBMS_STATS.IMPORT_SYSTEM_STATS(stattab => 'OLTP_stats', statid => 'OLTP', statown => 'SYS');                                                                                                                 
sys@PRD1>  select * from sys.aux_stats$;                                                                                                                                                                     ------------
ßSNAME                          PNAME                               PVAL1 PVAL2                                                                                                                                                                                                                                              
------------------------------ ------------------------------ ---------- ---------------------------                                                                                                                     
SYSSTATS_INFO                  STATUS                                     AUTOGATHERING                                                                                              
SYSSTATS_INFO                  DSTART                                     06-06-2017 11:00                                                                                           
SYSSTATS_INFO                  DSTOP                                      06-06-2017 12:00                                                                                           
SYSSTATS_INFO                  FLAGS                                   0                                                                                                            
SYSSTATS_MAIN                  CPUSPEEDNW                     1365.71988                                                                                                              
SYSSTATS_MAIN                  IOSEEKTIM                              10                                                                                                                                                  
SYSSTATS_MAIN                  IOTFRSPEED                           4096                                                                                                                                                  
SYSSTATS_MAIN                  SREADTIM                            5.336  SREADTIM  - single block read time  12 milisecond = IOSEEKTIM + db_block_size        / IOTFRSPEED                                                                                                                                                  
SYSSTATS_MAIN                  MREADTIM                             2.75  MREADTIM  - multiblock read time    26 milisecond= IOSEEKTIM + db_block_size * MBRC / IOTFRSPEED                                                                                                                                                 
SYSSTATS_MAIN                  CPUSPEED                             2648  CPUSPEED - CPU speed                                                                                                                                                     
SYSSTATS_MAIN                  MBRC                                   15  MBRC  - multi-block read count       8 = _db_file_optimizer_read_count                                                                                                                                                         
SYSSTATS_MAIN                  MAXTHR                           31527936  ioseektime maxthr, slavethr,                                                                                                                                                     
SYSSTATS_MAIN                  SLAVETHR                                                                                                                                                                                 
SYSSTATS_TEMP                  SBLKRDS                          10606311  maximum mbrc                        282.790698 = buffer cache size in blocks / sessions                                   
SYSSTATS_TEMP                  SBLKRDTIM                        11485320  single block Cost per block                     1 by definition                                                              
SYSSTATS_TEMP                  MBLKRDS                           5504802  multi block Cost per block                  .2708 = 1/MBRC * MREADTIM/SREADTIM                                               
SYSSTATS_TEMP                  MBLKRDTIM                        12702170                                         
SYSSTATS_TEMP                  CPUCYCLES                         6999888                                         
SYSSTATS_TEMP                  CPUTIM                            2641405                                         
SYSSTATS_TEMP                  JOB                                    21                                         
SYSSTATS_TEMP                  CACHE_JOB                              22                                         
SYSSTATS_TEMP                  MBRTOTAL                         56031083                                         

The most important thing is that the ratio between single block read and multiblock read is ok, because the choice between full scan and index access is based on that.
Defaults are usually ok. They cost single block reads to 12 milliseconds and multi-block reads to 26, which is probably fine.
If you have a storage with very low latency but same bandwidth (SSD for example) then accurate system statistics may be better and favor index access over full table scans because this storage is optimal for that.                                                                                                                                                                                                                          
*****************************************                                                                                                                                                                                                                         
 CPU_COST and IO_COST in PLAN_TABLE table:                                                                                                                                                                                
                                                                                                                                                                                                                        
Different queries will now show different cpu and io costs depending on the kind of work that is being done:                                                                                                             
*** ********************************************************                                                                                                                                                             
*** CPU_COST and IO_COST in PLAN_TABLE table                                                                                                                                                                                                        
*** ********************************************************
 SQL> explain plan for select * from oltp.test where c='AAAHxGAABAAAJS1AEZ';
   Explained.
 
                                                                                                                     
The DELETE_SYSTEM_STATS procedure will delete all workload stats and replace previously gathered noworkload stats with the default values.
EXEC DBMS_STATS.delete_system_stats;                                                                                 
                                                                                                                     
Fixed Object Stats : gathers statistics on the X$ tables, which sit underneath the V$ dynamic performance views. Major changes to initialization parameters or system activity should signal 
you to gather fresh stats.
EXEC DBMS_STATS.gather_fixed_objects_stats;                                                                          
The stats are removed using the DELETE_FIXED_OBJECTS_STATS procedure.                                                
EXEC DBMS_STATS.delete_fixed_objects_stats;                                                                          
============================================================                                                                                                               
***      *** STATSPACK ***
============================================================

This is an Oracle performance diagnosis tool, and I highly recommend that Unix administrators learn to use this tool. There are really two types of collection options: level and threshold. 
You need to configure the level parameter, which controls the type of data collected from Oracle. The threshold parameter acts as a filter for the collection of SQL statements the status 
summary tables.
Here's how to install it. After logging on to the systems as Oracle, start up sqlplus and then just follow the steps as instructed (see Listing 9).
SQL> CREATE TABLESPACE PERFSTAT DATAFILE 'E:\ORACLE\ORADATA\PRD1\perfstat.dbf' SIZE 500M AUTOEXTEND OFF;  ---  /ora_data/prd1/perfstat.dbf
SQL>  CONNECT / AS SYSDBA
SQL>  define default_tablespace='PERFSTAT'
SQL>  define temporary_tablespace='TEMP'
SQL>  define perfstat_password='Perf$dba'
SQL>  @?/rdbms/admin/spcreate
To ensure that no errors were encountered during the installation, check the SPCUSR.LIS, SPCTAB.LIS, and SPCPKG.LIS output files. For example:

ORACLE_HOME/bin/spcusr.lis
ORACLE_HOME/bin/spctab.lis
ORACLE_HOME/bin/spcpkg.lis

1- Using Statspack:
====================

The following topics are discussed in this section:
SQL>  CONNECT perfstat/my_perfstat_password
SQL> variable snap number;
SQL> begin   :snap := statspack.snap;   end;
 /
SQL> print snap
      SNAP
----------
        12
2- Using DBMS_SCHEDULER to Collect Statistics
========================================

The DBMS_JOB package is an Oracle-automated method for scheduling and running different tasks, such as collecting statistics. A sample script on how to do this is supplied in SPAUTO.SQL
10g >+
SQL> sqlplus / as sysdba
grant create job to perfstat;

sqlplus /nolog
connect perfstat/pw;
BEGIN
DBMS_SCHEDULER.CREATE_JOB (
job_name => 'PERFSTAT.sp_snapshot',
job_type => 'STORED_PROCEDURE',
job_action => 'statspack.snap',
repeat_interval => 'freq=daily;byday=mon,tue,wed,thu,fri;BYHOUR=8,9,10,11,13,14; BYMINUTE=1',
auto_drop => FALSE,
enabled => TRUE,
comments => 'Statspack automated snap');
END;
/

BEGIN
DBMS_SCHEDULER.SET_ATTRIBUTE (
   name           =>   'PERFSTAT.sp_snapshot',
   attribute      =>   'repeat_interval',
   value          =>   'freq=daily;byday=mon,tue,wed,thu,fri;BYHOUR=8,9,10,11,13,14,15,16,17; BYMINUTE=0');
END;
/

===change sequence cache
alter sequence PERFSTAT.STATS$SNAPSHOT_ID nocache;

2.1 - Changing the Interval of Statistics Collection
3- Running a Statspack Performance Report :
Once snapshots are taken, there are two reports available - an Instance report (spreport.sql) , and a SQL report (sprepsql.sql and sprsqins.sql):


 BEGIN_SNAP : specifies the begin snapshot ID
 END_SNAP   : specifies the end snapshot ID
 HASH_VALUE : specifies the hash value of a SQL query
 REPORT_NAME: specifies the report output name

SQL>  connect perfstat/my_perfstat_password
SQL>  define begin_snap=1
SQL>  define end_snap=2   --- OR  define hash_value=1988538571
SQL>  define report_name=batch_run    
SQL>  @?/rdbms/admin/spreport
 - report prompts you for the following:
Completed Snapshots
                           Snap                    Snap
Instance     DB Name         Id   Snap Started    Level Comment
------------ ------------ ----- ----------------- ----- ----------------
prd1         PRD1             1 11 May 2000 12:07     5
                              2 11 May 2000 12:08     5

Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
3.2- Running a Statspack SQL Performance Report :

SQL>  connect perfstat/my_perfstat_password
SQL>  define begin_snap=39
SQL>  define end_snap=40
SQL   define hash_value=1988538571 --- SQL QUERY HASH
SQL>  define report_name=batch_sql_run
SQL>  @?/rdbms/admin/sprepsql
check reorts:
select SNAP_ID, TO_CHAR(SNAP_TIME, 'YYYY-MM-DD HH24:MI') snap_time, UCOMMENT
  from PERFSTAT.STATS$SNAPSHOT
  order by SNAP_ID;
3.2- Running a Statspack Session Performance Report :
EXECUTE STATSPACK.SNAP(i_session_id=>20);

4- Changing the Default Values for Snapshot Levels and SQL Thresholds
======================================================================
Snapshot Levels:
(Levels >= 0 General Performance Statistics,
Levels >= 5 Additional Data: SQL Statements,
Levels >= 6 Additional Data: SQL Plans and SQL Plan Usage,for high resource usage SQL Statements, along with all data captured by lower levels
Levels >= 7 Additional data: Segment Level Statistics  ( Logical reads,Db block changes,Physical reads,Physical writes,Physical reads direct,Physical writes direct,Buffer busy waits,ITL waits,Global cache consistent read blocks served (RAC specific),Global cache current blocks served (RAC specific),Row lock waits
Levels >= 10 Additional Statistics: Parent and Child Latches

Parameter Name	Range of Valid Values	Default Value	Meaning
--------------  ----------------------- --------------- --------
i_snap_level     0, 5, 6, 7, 10          5               Snapshot level
i_executions_th     Integer >=0          100             SQL threshold: number of times statement was executed                                                              
i_disk_reads_th     Integer >=0          1000            SQL threshold: number of disk reads the statement made                                                      
i_parse_calls_th    Integer >=0          1000            SQL threshold: number of parse calls the statement made                                                     
i_buffer_gets_th    Integer >=0          10000           SQL threshold: number of buffer gets the statement made                                                     
i_sharable_mem_th   Integer >=0          1048576         SQL threshold: amount of sharable memory                                                                    
i_version_count_th  Integer >=0          20              SQL threshold: number of versions of a SQL statement                                                        
i_seg_phy_reads_th  Integer >=0          1000            Segment statistic threshold: number of physical reads on a segment                                          
i_seg_log_reads_th  Integer >=0          10000           Segment statistic threshold: number of logical reads on a segment                                           
i_seg_buff_busy_th  Integer >=0          100             Segment statistic threshold: number of buffer busy waits for a segment                                      
i_seg_rowlock_w_th  Integer >=0          100             Segment statistic threshold: number of row lock waits for a segment                                         
i_seg_itl_waits_th  Integer >=0          100             Segment statistic threshold: number of ITL waits for a segment                                              
i_seg_cr_bks_sd_th  Integer >=0          1000            Segment statistic threshold: number of consistent reads blocks served by the instance for the segment (RAC) 
i_seg_cu_bks_sd_th  Integer >=0          1000            Segment statistic threshold: number of current blocks served by the instance for the segment (RAC)          
i_session_id        SID from V$SESSION   0 (no session)  Session ID of the Oracle session for which to capture session granular statistics                          
i_modify_parameter  TRUE, FALSE          FALSE           Determines whether the parameters specified are used for future snapshots  


Parameters for SNAP and MODIFY_STATSPACK_PARAMETER Procedures:
--------------------------------------------------------------
Temporarily 
SQL>  EXECUTE STATSPACK.SNAP(i_snap_level=>6);
Permanently
SQL>  EXECUTE STATSPACK.SNAP(i_snap_level=>10, i_modify_parameter=>'true'); -- save it to database
SQL>  EXECUTE STATSPACK.MODIFY_STATSPACK_PARAMETER (i_snap_level=>7, i_buffer_gets_th=>10000, i_disk_reads_th=>1000,i_modify_parameter=>'true');


select JOB_NAME
  , JOB_TYPE, JOB_ACTION
  , SCHEDULE_NAME, ENABLED
    , AUTO_DROP, STATE
  , TO_CHAR(NEXT_RUN_DATE,'YYYY-MM-DD HH24:MI') as NEXT_RUN
from DBA_SCHEDULER_JOBS;

THRESHOLD:
----------
Number of executions of the SQL statement. The default 100.
Number of disk reads performed by the SQL statement. The default 1,000.
Number of parse calls performed by the SQL statement. The default 1,000.
Number of buffer gets performed by the SQL statement. The default 10,000.
Size of sharable memory used by the SQL statement. The default 1 Mb.
Version count for the SQL statement. The default 20.


5- Sharing Data Through Export

expd userid=perfstat/my_perfstat_password parfile=spuexp.par  schemas=PERFSTAT

6- Removing Unnecessary Data 
*   PURGE DATA (delete):
SQL>  CONNECT perfstat/my_perfstat_password
SQL>  SET TRANSACTION USE ROLLBACK SEGMENT rbig; --if big data to purge
SQL>  DEFINE losnapid=1 ---batch mode 
SQL>  DEFINE hisnapid=2 ---batch mode
set lines 200;
column losnapid heading "First snap" new_value losnapid  format 999999999;
column hisnapid heading "Last snap" new_value hisnapid format 999999999;
select min(s.SNAP_ID) as losnapid, max(s.SNAP_ID) as hisnapid
  from STATS$SNAPSHOT s
  where s.SNAP_TIME < SYSDATE - NUMTODSINTERVAL(10, 'DAY');
SQL>  @?/rdbms/admin/sppurge
Specify the Low Snap ID and High Snap ID range to purge
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
LOSNAPID: Begin snapshot ID
HISNAPID: End snapshot ID
OR
BEGIN
  STATSPACK.PURGE(I_NUM_DAYS => 20);
END;
/
***** using scheduler 

CONNECT PERFSTAT/A_Pr3tty_Pwd
BEGIN
  DBMS_SCHEDULER.CREATE_JOB (
    job_name            => 'PERFSTAT.sp_purge_snapshots',
    job_type             => 'PLSQL_BLOCK',
    job_action           => 'STATSPACK.PURGE(I_NUM_DAYS =>14);',
    repeat_interval     => 'FREQ=DAILY; BYHOUR=20; BYMINUTE=50',
    auto_drop => FALSE,
    enabled => TRUE,
    comments            => 'Statspack snapshots purge'
  );
  DBMS_SCHEDULER.ENABLE('sp_purge_snapshots');
END;
/
***** USING WRAPPER so we can just change the JOB attribut without JOB redefinition

CREATE OR REPLACE
PACKAGE STATSPACK_WRAPPER AS 

  PROCEDURE PURGE
	( i_num_days        IN  number
	, i_extended_purge  IN  varchar2 default 'FALSE'
	, i_dbid            IN  number  default null
	, i_instance_number IN  number  default null
	);

END STATSPACK_WRAPPER;
/
CREATE OR REPLACE
PACKAGE BODY STATSPACK_WRAPPER AS

  PROCEDURE PURGE
    ( i_num_days        IN  number
    , i_extended_purge  IN  varchar2 default 'FALSE'
    , i_dbid            IN  number  default null
    , i_instance_number IN  number  default null
    )
  IS
    i_extended_purge_conv BOOLEAN default FALSE;    
  BEGIN
    IF i_extended_purge = 'TRUE'
      THEN i_extended_purge_conv := TRUE;
    END IF;
    
    STATSPACK.PURGE
    ( i_num_days
    , i_extended_purge_conv
    , i_dbid
    , i_instance_number
    );
  END PURGE;
END STATSPACK_WRAPPER;
/
BEGIN
  DBMS_SCHEDULER.CREATE_JOB (
   job_name           =>  'PERFSTAT.sp_purge_snapshots',
   job_type           =>  'STORED_PROCEDURE',
   job_action         =>  'PERFSTAT.statspack_wrapper.purge',
   number_of_arguments => 1,
   repeat_interval    =>  'FREQ=DAILY; BYHOUR=20; BYMINUTE=50',
   auto_drop          => FALSE,
   comments           =>  'Statspack automated purge');
DBMS_SCHEDULER.SET_JOB_ARGUMENT_VALUE (
   job_name           => 'PERFSTAT.sp_purge_snapshots',
   argument_position  => 1,
   argument_value     => '14');
DBMS_SCHEDULER.ENABLE('PERFSTAT.sp_purge_snapshots');
END;
/
Truncating All Statspack Data

SQL>  CONNECT perfstat/my_perfstat_password
SQL>  @?/rdbms/admin/sptrunc
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
7- Scripts for Statspack Removal
SPDROP.SQL: Drops entire Statspack environment, calling the following scripts: 




8- Automate reporting
-- alter sequence PERFSTAT.STATS$SNAPSHOT_ID nocache;

column  begin_snap  new_value   begin_snap
column  end_snap    new_value   end_snap
column  report_name new_value   report_name
 
column  instance_number new_value   instance_number
column  dbid        new_value   dbid
 
select dbid from v$database;
select instance_number from v$instance;
 
select  begin_snap, end_snap, 'sp_' || snap_time || '.txt' report_name
from    (
     select
        lag(snap_id,1) over(order by snap_id)   begin_snap,
        snap_id                 end_snap,
        lead(snap_id,1) over(order by snap_id)  next_snap,
        to_char(snap_time,'mmddyyyy_hh24mi')     snap_time
     from   stats$snapshot
     where  dbid        = &dbid
     and    instance_number = &instance_number
    )
where
       trunc(snap_time) = trunc(sysdate-&days)
;
 
@?/rdbms/admin/spreport



== Troubleshoot Errors
ORA-12012: error on auto execute of job 93195
ORA-00001: unique constraint (ORA-00001: unique constraint (PERFSTAT.STATS$MUTEX_SLEEP_PK) violated
ORA-06512: at "PERFSTAT.STATSPACK", line 5264
ORA-06512: at "PERFSTAT.STATSPACK", line 104
ORA-06512: at line 1
.) violated

alter table perfstat.stats$mutex_sleep disable constraint STATS$MUTEX_SLEEP_PK;
create index perfstat.STATS$MUTEX_SLEEP_PK on
STATS$MUTEX_SLEEP(SNAP_ID,DBID,INSTANCE_NUMBER,MUTEX_TYPE,LOCATION);
============================================================= StatspacK Analyse============================================================
Check Regularly:
1.      Top 5 wait events
2.      Load Profile
3.      Instance Efficiency Hit Ratios
4.      Wait Events / Wait Event Histograms
5.      Latch Waits 
6.      Top SQL
7.      Instance Activity / Time Model Stats / O/S Stats
8.      File I/O / File Read Histogram / Undo Stats
9.      Memory Allocation
10.     Undo  


====
Wait Events Quick Reference Guide
Wait Problem           Potential Fix
---------------------- ------------------------------------------------------------------------------------------------------------------------------------------------------------------
DB File Scattered Read  Wait for Multi-block read of a table or index (full scan): tune the code and/or cache small tables.
DB File Sequential Read Wait for single block read of a table or index. Indicates many index reads: tune the code (especially joins).
DB File parallel read	Used when Oracle performs in parallel reads from multiple datafiles to non-contiguous buffers in memory (PGA or Buffer Cache). Similar to db file sequential read
Free Buffer             Increase the DB_CACHE_SIZE; shorten the checkpoint; tune the code.
Buffer Busy             Segment header: add freelists or freelist groups.
Buffer Busy             Data block: separate "hot" data; use reverse key indexes and/or smaller blocks.
Buffer Busy             Data block: increase initrans and/or maxtrans.
Buffer Busy             Undo header: add rollback segments or areas.
Buffer Busy             Undo block: commit more often; use larger rollback segments or areas.
Latch Free              Investigate the latch detail.
Enqueue-ST              Use LMTs or preallocate large extents.
Enqueue-HW              Preallocate extents above high-water mark.
Enqueue-TX4             Increase initrans and/or maxtrans on the table or index.
Enqueue-TM              Index foreign keys; check application locking of tables.
Log Buffer Space        Increase the log buffer; use faster disks for the redo logs.
Log File Switch         Archive destination slow or full; add more or larger redo logs.
Log File Sync           Commit more records at a time; use faster redo log disks or raw devices.
Direct Path Read	Used by Oracle when reading directly into PGA (sort or hash)
Direct Path Write	Used by Oracle when writing directly into PGA (sort or hash)
Idle Event              Ignore it.
==== WAITS
Common I/O related waits:-
        Db file sequential read  Index reads or scans
        Db file scattered read  Full table scans
        Direct path read/write  Temp IO
        Log related waits	- IO, switches, buffer
-- non_idle_wait_time = DB Time - DB CPU
Wait Events  Where to Jump?
Db file * read           ->SQL by buffer gets/disk reads, File IO stats
CPU Time                 -> Parse rates, Sorts, SQL executions, SQL buffer gets/disk reads, SMP processes(bugs)
Direct path reads/writes -> Sorts, Hash joins, hash/sort_area_size, File IO Stats
Buffer busy waits        -> Buffer pool, Buffer waits, File IO stats,  Segment statistics
Other important wait events (e.g. latches, enqueues) have corresponding statspack sections to themselves

---Resolving Wait Events Section
 In this section we list the I/O-related Wait Events that occur most often in Oracle databases together with reference notes describing each wait. 
Datafile I/O-Related Wait Events:
'db file sequential read' [NOTE:34559.1]
'db file scattered read' [NOTE:34558.1]
'db file parallel read'
'direct path read' [NOTE:50415.1]
'direct path write' [NOTE:50416.1]
'direct path read (lob)'
'direct path write (lob)'

Controlfile I/O-Related Wait Events:
'control file parallel write'
'control file sequential read'
'control file single write'

Redo Logging I/O-Related Wait Events:
'log file parallel write' [NOTE:34583.1]
'log file sync' [NOTE:34592.1]
'log file sequential read'
'log file single write'
'switch logfile command'
'log file switch completion'
'log file switch (clearing log file)'
'log file switch (checkpoint incomplete)'
'log switch/archive'
'log file switch (archiving needed)'

Buffer Cache I/O-Related Wait Events:
'db file parallel write' [NOTE:34416.1]
'db file single write'
'write complete waits'
'free buffer waits' 


=========
1. DB File Scattered Read: 
That generally happens during many full scan of a table or Fast Full Index Scans. As full table scans are pulled into memory, they rarely fall into contiguous buffers but instead are scattered throughout the buffer cache. A large number here indicates that your table may have missing indexes or your indexes are not used. Although it may be more efficient in your situation to perform a full table scan than an index scan, check to ensure that full table scans are necessary when you see these waits. Try to cache small tables to avoid reading them in over and over again, since a full table scan is put at the cold end of the LRU (Least Recently Used) list. You can use the Statspack report to help identify the query in question and fix it.
The init.ora parameter db_file_multiblock_read_count specifies the maximum numbers of blocks read in that way. Typically, this parameter should have values of 4-16 independent of the size of the database but with higher values needed with smaller Oracle block sizes. If you have a high wait time for this event, you either need to reduce the cost of I/O, e.g. by getting faster disks or by distributing your I/O load better, or you need to reduce the amount of full table scans by tuning SQL statements. The appearance of thedb file scattered read and db file sequential readevents may not necessarily indicate a problem, as IO is a normal activity on a healthy instance. However, they can indicate problems if any of the following circumstances are true:
 The data-access method is bad (that is, the SQL statements are poorly tuned), resulting in unnecessary or inefficient IO operations
 The IO system is overloaded and performing poorly
 The IO system is under-configured for the load
 IO operations are taking too long

If this Wait Event is a significant portion of Wait Time then a number of approaches are possible:
o Find which SQL statements perform Full Table or Fast Full Index scans and tune them to make sure these scans are necessary and not the result of a suboptimal plan.
- Starting with Oracle9i the new view V$SQL_PLAN view can help:
For Full Table scans:
select sql_text from v$sqltext t, v$sql_plan p
  where t.hash_value=p.hash_value 
    and p.operation='TABLE ACCESS'
    and p.options='FULL'
  order by p.hash_value, t.piece;

For Fast Full Index scans:
select sql_text from v$sqltext t, v$sql_plan p
  where t.hash_value=p.hash_value 
    and p.operation='INDEX'
    and p.options='FULL SCAN'
  order by p.hash_value, t.piece;

o In cases where such multiblock scans occur from optimal execution plans it is possible to tune the size of multiblock I/Os issued by Oracle by setting the instance parameter DB_FILE_MULTIBLOCK_READ_COUNT so that:
DB_BLOCK_SIZE x DB_FILE_MULTIBLOCK_READ_COUNT = max_io_size of system 
Query tuning should be used to optimize online SQL to use indexes.

2. DB File Sequential Read: 
 This could indicate poor joining orders in your SQL or waiting for writes to TEMP space generally (direct loads, Parallel DML (PDML) such as parallel updates. It could mean that a lot of index reads/scans are going on. Depending on the problem it may help to tune PGA_AGGREGATE_TARGET and/or DB_CACHE_SIZE. 
 The sequential read event identifies Oracle reading blocks sequentially, i.e. one after each other.. A large number of waits here could indicate poor joining orders of tables, unselective indexing or you either need to reduce the cost of I/O, e.g. by getting faster disks or by distributing your I/O load better,
 or you need to reduce the amount of I/O by increasing the buffer cache or by tuning SQL statements. It is normal for this number to be large for a high-transaction, well-tuned system, but it can indicate problems in some circumstances. You should correlate this wait statistic with other known issues within the Statspack report, such as inefficient SQL.
 Check to "ensure that index scans are necessary", and check "join orders" for multiple table joins. The "DB_CACHE_SIZE" will also be a determining factor in how often these waits show up. Problematic hash-area joins should show up in the PGA memory, but they're also memory hogs that could cause high wait numbers for sequential reads.
 They can also show up as direct path read/write waits. These circumstances are usually interrelated. When they occur in conjunction with the appearance of the 'db file scattered read' and 'db file sequential read' in the Top 5 Wait Events section, first you should examine the SQL Ordered by Physical Reads section of the report, 
 to see if it might be helpful to tune the statements with the highest resource usage. It could be because the indexes are fragmented. in this case, rebuilding the index will compact it and will produce to visit less blocks.
 Then, to determine whether there is a potential I/O bottleneck, examine the OS I/O statistics for corresponding symptoms. Also look at the average time per read in the Tablespace and File I/O sections of the report. 
 If many I/O-related events appear high in the Wait Events list, re-examine the host hardware for disk bottlenecks and check the host-hardware statistics for indications that a disk reconfiguration may be of benefit.
 Block reads are fairly inevitable so the aim should be to minimize unnecessary I/O. I/O for sequential reads can be reduced by tuning SQL calls that result in full table scans and using the partitioning option for large tables.

3. Free Buffer Waits: When a session needs a free buffer and cannot find one, it will post the database writer process asking it to flush dirty blocks. Waits in this category may indicate that you need to increase the DB_BUFFER_CACHE, if all your SQL is tuned. Free buffer waits could also indicate that unselective SQL is causing data to flood the buffer cache with index blocks, leaving none for this particular statement that is waiting for the system to process. 
This normally indicates that there is a substantial amount of DML (insert/update/delete) being done and that the Database Writer (DBWR) is not writing quickly enough; the buffer cache could be full of multiple versions of the same buffer, causing great inefficiency. To address this, you may want to consider accelerating incremental checkpointing, using more DBWR processes, or increasing the number of physical disks. To investigate if this is an I/O problem,
look at the statspack file I/O Statistics. Increase the DB_CACHE_SIZE; shorten the checkpoint; tune the code to get less dirty blocks, faster I/O, use multiple DBWRs. 

4. Buffer Busy Waits. A buffer busy wait happens when multiple processes concurrently want to modify the same block in the buffer cache. This typically happens during massive parallel inserts if your tables do not have free lists and it can happen if you have too few rollback segments. Buffer busy waits should not be greater than 1 percent. Check the Buffer Wait Statistics section (or V$WAITSTAT) to find out if the wait is on a segment header. 
If this is the case, increase the freelist groups or increase the pctused to pctfree gap. If the wait is on an undo header, you can address this by adding rollback segments; if it's on an undo block, you need to reduce the data density on the table driving this consistent read or increase the DB_CACHE_SIZE. If the wait is on a data block, you can move data to another block to avoid this hot block, increase the freelists on the table, or use Locally Managed Tablespaces (LMTs). 
If it's on an index block, you should rebuild the index, partition the index, or use a reverse key index. To prevent buffer busy waits related to data blocks, you can also use a smaller block size: fewer records fall within a single block in this case, so it's not as "hot." When a DML (insert/update/ delete) occurs, Oracle Database writes information into the block, including all users who are "interested" in the state of the block (Interested Transaction List, ITL). 
To decrease waits in this area, you can increase the initrans, which will create the space in the block to allow multiple ITL slots. You can also increase the pctfree on the table where this block exists (this writes the ITL information up to the number specified by maxtrans, when there are not enough slots built with the initrans that is specified). Buffer busy waits can be reduced by using reverse-key indexes for busy indexes and by partitioning busy tables.
Buffer Busy Wait on Segment Header  Add freelists (if inserts) or freelist groups (esp. RAC). Use ASSM.
Buffer Busy Wait on Data Block  Separate hot data; potentially use reverse key indexes; fix queries to reduce the blocks popularity, use smaller blocks, I/O, Increase initrans and/or maxtrans (this ones debatable). Reduce records per block
Buffer Busy Wait on Undo Header  Add rollback segments or increase size of segment area (auto undo) 
Buffer Busy Wait on Undo block  Commit more (not too much) Larger rollback segments/area. Try to fix the SQL.


5. Latch Free. Latches are low-level queuing mechanisms (they're accurately referred to as mutual exclusion mechanisms) used to protect shared memory structures in the system global area (SGA). Latches are like locks on memory that are very quickly obtained and released. Latches are used to prevent concurrent access to a shared memory structure. If the latch is not available, a latch free miss is recorded. Most latch problems are related to the failure to use bind variables (library cache latch), 
  redo generation issues (redo allocation latch), buffer cache contention issues (cache buffers LRU chain), and hot blocks in the buffer cache (cache buffers chain). There are also latch waits related to bugs; check MetaLink for bug reports if you suspect this is the case. When latch miss ratios are greater than 0.5 percent, you should investigate the issue. If latch free waits are in the Top 5 Wait Events or high in the complete Wait Events list, look at the latch-specific sections of the Statspack report to see which latches are contended for.
6. Enqueue. An enqueue is a lock that protects a shared resource. Locks protect shared resources, such as data in a record, to prevent two people from updating the same data at the same time application, e.g. when a select for update is executed.. An enqueue includes a queuing mechanism, which is FIFO (first in, first out). Note that Oracle's latching mechanism is not FIFO. Enqueue waits usually point to the ST enqueue, the HW enqueue, the TX4 enqueue, and the TM enqueue. 
   The ST enqueue is used for space management and allocation for dictionary-managed tablespaces. Use LMTs, or try to preallocate extents or at least make the next extent larger for problematic dictionary-managed tablespaces. HW enqueues are used with the high-water mark of a segment; manually allocating the extents can circumvent this wait. TX4s are the most common enqueue waits. TX4 enqueue waits are usually the result of one of three issues. The first issue is duplicates in a unique index; you need to commit/rollback to free the enqueue. 
   The second is multiple updates to the same bitmap index fragment. Since a single bitmap fragment may contain multiple rowids, you need to issue a commit or rollback to free the enqueue when multiple users are trying to update the same fragment. The third and most likely issue is when multiple users are updating the same block. If there are no free ITL slots, a block-level lock could occur. You can easily avoid this scenario by increasing the initrans and/or maxtrans to allow multiple ITL slots and/or by increasing the pctfree on the table. 
   Finally, TM enqueues occur during DML to prevent DDL to the affected object. If you have foreign keys, be sure to index them to avoid this general locking issue.
Enqueue - ST Use LMTs or pre-allocate large extents 
Enqueue - HW Pre-allocate extents above HW (high water mark.)
Enqueue  TX Increase initrans and/or maxtrans (TX4) on (transaction) the table or index.  Fix locking issues if TX6.  Bitmap (TX4) & Duplicates in Index (TX4).
Enqueue - TM Index foreign keys; Check application (trans. mgmt.) locking of tables.  DML Locks.

7. Log Buffer Space
   This wait occurs because you are writing the log buffer faster than LGWR can write it to the redo logs, or because log switches are too slow. To address this problem, increase the size of the redo log files, or increase the size of the log buffer, or get faster disks to write to. You might even consider using solid-state disks, for their high speed.

8. Log File Switch
   All commit requests are waiting for "logfile switch (archiving needed)" or "logfile switch (chkpt. Incomplete)." Ensure that the archive disk is not full or slow. DBWR may be too slow because of I/O. You may need to add more or larger redo logs, and you may potentially need to add database writers if the DBWR is the problem.

9. Log File Sync
  A Log File Sync happens each time a commit (or rollback) takes place. If there are a lot of waits in this area then you may want to examine your application to see if you are committing too frequently (or at least more than you need to). When a user commits or rolls back data, the LGWR flushes the session's redo from the log buffer to the redo logs. The log file sync process must wait for this to successfully complete. 
  To reduce wait events here, try to commit more records (try to commit a batch of 50 instead of one at a time, for example). Put redo logs on a faster disk, or alternate redo logs on different physical disks, to reduce the archiving effect on LGWR. Don't use RAID 5, since it is very slow for applications that write a lot; potentially consider using file system direct I/O or raw devices, which are very fast at writing information.
  The associated event, log buffer parallel write is used by the redo log writer process, and it will indicate if your actual problem is with the log file I/O. Large wait times for this event can also be caused by having too few CPU resources available for the redolog writer process.

10. Idle Event. There are several idle wait events listed after the output; you can ignore them. Idle events are generally listed at the bottom of each section and include such things as SQL*Net message to/from client and other background-related timings. Idle events are listed in the stats$idle_event table.

11. global cache cr request: (OPS) This wait event shows the amount of time that an instance has waited for a requested data block for a consistent read and the transferred block has not yet arrived at the requesting instance. 
    See Note 157766.1 'Sessions Wait Forever for 'global cache cr request' Wait Event in OPS or RAC'. In some cases the 'global cache cr request' wait event may be perfectly normal if large buffer caches are used and the same data is being accessed concurrently on multiple instances. 
    In a perfectly tuned, non-OPS/RAC database, I/O wait events would be the top wait events but since we are avoiding I/O's with RAC and OPS the 'global cache cr request' wait event often takes the place of I/O wait events.

12. library cache pin: Library cache latch contention may be caused by not using bind variables. It is due to excessive parsing of sql statement.

13. CPU time: 
  This is not really a wait event (hence, the new name), but rather the sum of the CPU used by this session, or the amount of CPU time used during the snapshot window. In a heavily loaded system, if the CPU time event is the biggest event, that could point to some CPU-intensive processing (example, forcing the use of an index when a full scan should have been used), which could be the cause of the bottleneck. 
  When CPU Other is a significant component of total Response Time the next step is to find the SQL statements that access the most blocks. Block accesses are also known as Buffer Gets and Logical I/Os. Statspack lists such SQL statements in section SQL ordered by Gets. 

14. DB File Parallel Read:  This Wait Event is used when Oracle performs in parallel reads from multiple datafiles to non-contiguous buffers in memory (PGA or Buffer Cache). This is done during recovery operations or when buffer prefetching is being used as an optimization i.e. instead of performing multiple single-block reads.
    If this wait is an important component of Wait Time, follow the same guidelines as 'db file sequential read'. 

15. PX qref latch:  Can often mean that the "Producers are producing data quicker than the Consumers can consume it". Maybe we could increase parallel_execution_message_size to try to eliminate some of these waits or we might decrease the degree of parallelism. If the system workload is high consider to decrease the degree of parallelism. If you have DEFAULT parallelism on your object  you can decrease the value of PARALLEL_THREADS_PER_CPU.  Have in mind  DEFAULT degree = PARALLEL_THREADS_PER_CPU * #CPU's  

16. Log File Parallel Writes: Log file parallel write waits occur when waiting for writes of REDO records to the REDO log files to complete. The wait occurs in log writer (LGWR) as part of normal activity of copying records from the REDO log buffer to the current online log.
    The actual wait time is time taken for all outstanding I/O requests to complete. Even though the writes may be issued in parallel, LGWR needs to wait for the last I/O to be on disk before the parallel write is considered complete.
    Hence the wait time depends on the time it takes the OS to complete all requests. Waits for log file parallel writes can be identified by looking at the "Top 5 Timed Events" or "Wait Events" section of the Statspack report.
    Log file parallel write waits can be reduced by moving log files to the faster disks and/or separate disks where there will be less contention.

17. SQL*Net more data to client:
This means the instance is sending a lot of data to the client. You can decrease this time by having the client bring back less data. Maybe the application doesn't need to bring back as much data as it is. 

18. SQL*Net message to client:
The SQL*Net message to client Oracle metric indicates the server (foreground process) is sending a message to the client, and it can be used to identify throughput issues over a network, especially distributed databases with slow database links. 
The SQL*Net more data to client event happens when Oracle writes multiple data buffers (sized per SDU) in a single logical network call.

19. enq: TX - row lock contention:
    Oracle maintence data consistency with the help of locking mechanism. When a particular row is being modified by the process, either through Update/ Delete or Insert operation, oracle tries to acquire lock on that row. 
    Only when the process has acquired lock the process can modify the row otherwise the process waits for the lock. This wait situation triggers this event. The lock is released whenever a COMMIT is issued by the process which has acquired lock for the row. 
    Once the lock is released, processes waiting on this event can acquire lock on the row and perform DML operation


== 5.      Latch Waits 

So what exactly causes latch contention within Oracle? 
whenever a latch is busy and currently in use within Oracle, any process that requests access to the latch will spin before attempting to gain access to the latch
If the latch is still unavailable, the process will keep spinning and using up valuable CPU resources, thus causing a performance problem.
Within Oracle, there is a hidden parameter called spin_count that sets the number of times that the process will spin in a loop before giving up and going to sleep.
What happens is that the initial sleep period is one centisecond on the first spin count ?. Each subsequent spin count is doubled until the spin_count threshold is reached, at which the process must relinquish CPU resources and sleep.
So, how does one identify latch contention issues within Oracle outside of using ADDM and AWR reports? Simple.
Query the dynamic performance views shown below:
latch Views$
------------
v$latch
v$latchholderable 3.1: STATSPACK, DBA HIST equivalencies
v$latchname   
* examine the values for gets, misses and sleeps for each latch so that one can determine where the latch problem is to be found.  
SELECT (1 - (Sum(misses) / Sum(gets))) * 100 "latch Hit ratio"
FROM v$latch
/



DBA HIST VIEW                   STATSPACK TABLE               WRH$TABLE                   
------------------------------- ---------------------------- ---------------------------
dba_hist_event_summary          stats$bg_event_summary       wrh$_bg_event_summary      
dba_hist_buffer_pool_statistics stats$buffer_pool_statistics wrh$_buffer_pool_statistics
dba_hist_filestatxs             stats$filestatxs             wrh$_filestatxs            
dba_hist_latch                  stats$latch                  wrh$_latch                 
dba_hist_latch_children         stats$latch_children         wrh$_latch_children        
dba_hist_librarycache           stats$librarycache           wrh$_librarycache          
dba_hist_rowcache_summary       stats$rowcache_summary       wrh$_rowcache_summary      
dba_hist_sgastat                stats$sgastat                wrh$_sgastat               
dba_hist_sql_summary            stats$sql_summary            wrh$_sql_summary           
dba_hist_sysstat                stats$sysstat                wrh$_sysstat               
dba_hist_system_event           stats$system_event           wrh$_system_event          
dba_hist_waitstat               stats$waitstat                wrh$_waitstat             
                                            
== 2.      Load Profile  ====================================================

Load Profile                            Per Second       Per Transaction
~~~~~~~~~~~~                       ---------------       ---------------
            Redo size Bytes:             49,158.30              5,340.23
              Logical reads:             25,135.92              2,730.60
              Block changes:                334.74                 36.36
             Physical reads:                 92.79 (B)             10.08
            Physical writes:                 11.99 (B)              1.30
                 User calls:                593.89 (C)             64.52
                     Parses:                168.18 (D)             18.27
                Hard parses:                 16.83 (D)              1.83
                      Sorts:                 68.55                  7.45
                     Logons:                 17.85                  1.94
                   Executes:                236.47                 25.69
               Transactions:                  9.21
 
   % Blocks changed per Read:    1.33 (A)    Recursive Call %:    58.09
   Rollback per transaction %:   43.35       Rows per Sort:   198.58     
   
   Observations:
 This system is not generating a lot of redo (5K/s), with 1.33% of all blocks read being updated. (A)
 Comparing the number of Physical reads per second to the number of Physical writes per second shows the physical read to physical write ratio is high enough(10:1)  (B). Typical OLTP systems have a read-to-write ratio of 10:1 or 5:1 - 
 This system is not that busy, with 593 User calls per second.(C)
 The total parse rate (Parses per second) seems not to be high (D), with the Hard parse rate very low, which implies the majority of the parses are soft parses (D). 
The high parse rate may tie in with the latch free event, if the latch contended for is the library cache latch, however no assumptions should be made. (D)
 
 ** Where:
. Redo size:  This is the amount of redo generated during this report. If you see an increase here then more DML statements are taking place (meaning your users are doing more INSERTs, UPDATEs, and DELETEs than before
. Logical Reads: This is calculated as Consistent Gets + DB Block Gets =  Logical Reads
. Block changes: The number of blocks modified during the sample interval. If you see an increase here then more DML statements are taking place (meaning your users are doing more INSERTs, UPDATEs, and DELETEs than before
. Physical Reads: The number of requests for a block that caused a physical I/O.
. Physical Writes: The number of physical writes issued.
. User Calls: The number of queries generated
. Parses: Total of all parses: both hard and soft
. Hard Parses: Those parses requiring a completely new parse of the SQL statement.  A hard parse rate of greater than 100 per second indicates there is a very high amount of hard parsing on the system. High hard parse rates cause serious performance issues, and must be investigated. A high hard parse rate is usually accompanied by latch contention on the shared pool and library cache latches. Check whether waits for latch free appear in the top-5 wait events, and if so, examine the latching sections of the Statspack report. Of course, we want a low number here.
. Soft Parses: Not listed but derived by subtracting the hard parses from parses.  A soft parse reuses a previous hard parse and hence consumes far fewer resources. A high soft parse rate could be anywhere in the rate of 300 or more per second. Unnecessary soft parses also limit application scalability; optimally a SQL statement should be soft-parsed once per session, and executed many times.
. Sorts and Logons are all self explanatory
. Executes: how many statements we are executing per second / transaction
. Transactions: how many transactions per second we process 

This gives an overall view of the load on the server. In this case, we are looking at a very good hard parse number and a fairly high system load.              
The per-second statistics show you the changes in throughput (i.e. whether the instance is performing more work per second). For example:
 a significant increase in redo size, block changes and pct of blocks changed per read would indicate the instance is performing more inserts/updates/deletes.
 an increase in the redo size without an increase in the number of transactions per second would indicate a changing transaction profile.
Similarly, looking at the per-transaction statistics allows you to identify changes in the application characteristics by comparing these to the corresponding statistics from the baseline report.
               

====== 3.      Instance Efficiency Hit Ratios

Instance Efficiency Percentages
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            Buffer Nowait %:  100.00       Redo NoWait %:    100.00
            Buffer  Hit   %:   99.82       In-memory Sort %: 100.00
            Library Hit   %:   92.76       Soft Parse %:     100.00  (A)--should be as near to 100%
         Execute to Parse %:   28.88(A)    Latch Hit %:       99.19
Parse CPU to Parse Elapsd %:   58.47(A)    % Non-Parse CPU:   94.59 -- round(100*(1-:prse/:exe),2) pctval  If the number of parse calls = number of execute calls, then ratio drifts to zero (bad). on the contrary ratio goes to 100% // parsed a statement ONCE and executed it MANY TIMES (that is good, that is best)  
 
 Shared Pool Statistics        Begin   End
                               ------  ------
             Memory Usage %:   28.80   29.04 (B)
    % SQL with executions>1:   75.91   76.03
  % Memory for SQL w/exec>1:   83.65   84.09

Observations:
 The 100% soft parse ratio (A) indicates the system is not hard-parsing. However the system is soft parsing a lot, rather than only re-binding and re-executing the same cursors, as the Execute to Parse % is very low (A).
 Also, the CPU time used for parsing (A) is only 58% of the total elapsed parse time (see Parse CPU to Parse Elapsd). This may also imply some resource contention during parsing (possibly related to the latch free event?).
 There seems to be a lot of unused memory in the shared pool (only 29% is used) (B). If there is insufficient memory allocated to other areas of the database (or OS), this memory could be redeployed

- - 
Buffer Nowait Ratio: This is the percentage of time that the instance made a call to get a buffer (all buffer types are included here) and that buffer was made available immediately (meaning it didn't have to wait for the buffer...hence "Buffer Nowait"). If the ratio is low, then could be a (hot) block(s) being contended for that should be found in the Buffer Wait Section.. If the ratio is low, check the Buffer Wait Statistics section of the report for more detail on which type of block is being contended for.
Buffer Hit Ratio   : (also known as the buffer-cache hit ratio) Ideally more than 95 percent. It shows the % of times a particular block was found in buffer cache insted of performing a physical I/O (reading from disk). 
Although historically known as one of the most important statistics to evaluate, this ratio can sometimes be misleading. A low buffer hit ratio does not necessarily mean the cache is too small; it may be that potentially valid full-table scans are artificially reducing what is otherwise a good ratio. Similarly, a high buffer hit ratio (say, 99 percent) normally indicates that the cache is adequately sized, but this assumption may not always be valid. For example, frequently executed SQL statements that repeatedly refer to a small number of buffers via indexed lookups can create a misleadingly high buffer hit ratio. When these buffers are read, they are placed at the most recently used (MRU) end of the buffer cache; iterative access to these buffers can artificially inflate the buffer hit ratio. This inflation makes tuning the buffer cache a challenge. Sometimes you can identify a too-small buffer cache by the appearance of the write complete waits event, which indicates that hot blocks (that is, blocks that are still being modified) are aging out of the cache while they are still needed; check the Wait Events list for evidence of this event.
Library Hit Ratio  : This ratio, also known as the library-cache hit ratio, gives the percentage of pin requests that result in pin hits. A pin hit occurs when the SQL or PL/SQL code to be executed is already in the library cache and is valid to execute. If the "Library Hit ratio" is low, it could be indicative of a shared pool that is too small (SQL is prematurely pushed out of the shared pool), or just as likely, that the system did not make correct use of bind variables in the application. If the soft parse ratio is also low, check whether there's a parsing issue. A lower ratio could also indicate that bind variables are not used or some other issue is causing SQL not to be reused (in which case a smaller shared pool may only be a band-aid that will potentially fix a library latch problem which may result). 
Execute to Parse   : If value is negative, it means that the number of parses is larger than the number of executions. Another cause for a negative execute to parse ratio is if the shared pool is too small and queries are aging out of the shared pool and need to be reparsed.  This is another form of thrashing which also degrades performance tremendously. So, if you run some SQL and it has to be parsed every time you execute it (because no plan exists for this statement) then your percentage would be 0%. The more times that your SQL statement can reuse an existing plan the higher your Execute to Parse ratio is. This is very BAD!! One way to increase your parse ratio is to use bind variables. 
Parse CPU to Parse Elapsd %: Generally, this is a measure of how available your CPU cycles were for SQL parsing. If this is low, you may see "latch free" as one of your top wait events.
Redo Nowait Ratio  : This ratio indicates the amount of redo entries generated for which there was space available in the redo log. The instance didn't have to wait to use the redo log if this is 100%
The redo-log space-request statistic is incremented when an Oracle process attempts to write a redo-log entry but there is not sufficient space remaining in the online redo log. Thus, a value close to 100 percent for the redo nowait ratio indicates minimal time spent waiting for redo logs to become available, either because the logs are not filling up very often or because the database is able to switch to a new log quickly whenever the current log fills up.
If your alert log shows that you are switching logs frequently (that is, more than once every 15 minutes), you may be able to reduce the amount of switching by increasing the size of the online redo logs. If the log switches are not frequent, check the disks on which the redo logs reside to see why the switches are not happening quickly. If these disks are not overloaded, they may be slow, which means you could put the files on faster disks.
In-Memory Sort Ratio: This ratio gives the percentage of sorts that were performed in memory, rather than requiring a disk-sort segment to complete the sort. Optimally, in an OLTP environment, this ratio should be high. Setting the PGA_AGGREGATE_TARGET (or SORT_AREA_SIZE) initialization parameter effectively will eliminate this problem, as a minimum you pretend to have this one in 95%
Soft Parse Ratio   : This ratio gives the percentage of parses that were soft, as opposed to hard. A soft parse occurs when a session attempts to execute a SQL statement and a usable version of the statement is already in the shared pool. In other words, all data (such as the optimizer execution plan) pertaining to the statement in the shared pool is equally applicable to the statement currently being issued. A hard parse, on the other hand, occurs when the current SQL statement is either not in the shared pool or not there in a shareable form. An example of the latter case would be when the SQL statement in the shared pool is textually identical to the current statement but the tables referred to in the two statements resolve to physically different tables.
Hard parsing is an expensive operation and should be kept to a minimum in an OLTP environment. The aim is to parse once, execute many times.
Ideally, the soft parse ratio should be greater than 95 percent. When the soft parse ratio falls much below 80 percent, investigate whether you can share SQL by using bind variables or force cursor sharing by using the init.ora parameter cursor_sharing.
Before you jump to any conclusions about your soft parse ratio, however, be sure to compare it against the actual hard and soft parse rates shown in the Load Profile. If the rates are low (for example, 1 parse per second), parsing may not be a significant issue in your system. Another useful standard of comparison is the proportion of parse time that was not CPU-related, given by the following ratio:
(parse time CPU) / (parse time elapsed)

A low value for this ratio could mean that the non-CPU-related parse time was spent waiting for latches, which might indicate a parsing or latching problem. To investigate further, look at the shared-pool and library-cache latches in the Latch sections of the report for indications of contention on these latches.
Latch Hit Ratio: This is the ratio of the total number of latch misses to the number of latch gets for all latches. A low value for this ratio indicates a latching problem, whereas a high value is generally good. However, as the data is rolled up over all latches, a high latch hit ratio can artificially mask a low get rate on a specific latch. Cross-check this value with the Top 5 Wait Events to see if latch free is in the list, and refer to the Latch sections of the report. Latch Hit % of less than 99 percent is usually a big problem. 

Also check the "Shared Pool Statistics", if the "End" value is in the high 95%-100% range ,this is a indication that the shared pool needs to be increased (especially if the "Begin" value is much smaller) 
% SQL with executions>1: Shows % of SQLs executed more than 1 time. The % should be very near to value 100.
% memory for SQL w/exec>1: From the memory space allocated to cursors, shows which % has been used by cursors more than 1.
 



---
 
 
 
 ===  SCRIPTS
  2. Load Profile                              
/*   
WITH TRX AS
(SELECT (LAG(sy.value) OVER (partition by sy.name order by sy.snap_id))/86400*(s.snap_time-LAG(s.snap_time)OVER (PARTITION BY sy.name order by sy.snap_id)) as value,
     min(s.snap_id) BEGIN_SNAP,max(s.snap_id) END_SNAP,min(s.snap_time)BEGIN_TIME,max(s.snap_time) END_TIME                                                                                        
FROM stats$sysstat sy,stats$snapshot s                                                     
WHERE sy.snap_id BETWEEN  &begin_snap AND &end_snap                       
AND s.snap_id=sy.snap_id
AND sy.name IN ('user commits','transaction rollbacks')
ORDER BY sy.name, sy.snap_id)
SELECT 'Transaction Per Sec',sum(value),BEGIN_SNAP,END_SNAP,BEGIN_TIME,END_TIME
FROM TRX ;                                                            
                                     
'physical read total multi block requests','Workload Capture: dbtime')    
ORDER BY sy.name, sy.snap_id;                                             
*/

6.      Top SQL
                                            prompt ********* TOP SQL ********
break on sql_id on "CPU time (s/exec)" on "Elaps. time (s/exec)" on "Cost" on "Execs"
  SELECT a.sql_id,a.sql_text "SQL statement", b.avgcputime "CPU time (s/exec)", b.avgelapstime "Elaps. time (s/exec)", 
MAX (c.COST) "Cost", b.executions "Execs", b.TIME "Date/Time", b.module "Module" 
FROM stats$sqltext a, 
(SELECT DISTINCT sql_id, snap_id, executions, avgcputime, avgelapstime, module, 
TO_CHAR (last_active_time, 'dd-mm-yy hh24:mi') TIME 
FROM (SELECT DISTINCT sql_id, ROWNUM, snap_id, executions, 
ROUND (cpu_time / (executions * 1000000), 0) avgcputime, 
ROUND (elapsed_time / (executions * 1000000), 0) avgelapstime, 
module, last_active_time 
FROM stats$sql_summary 
WHERE executions != 0 
/*AND module IN (SELECT DISTINCT module 
-- To get SQL of application only 
FROM stats$sql_summary 
WHERE LOWER (module) LIKE 'yourappname%')  */
AND TO_CHAR (last_active_time, 'DD.MM.YYYY') = 
TO_CHAR (SYSDATE, 'DD.MM.YYYY') 
ORDER BY avgelapstime DESC) 
WHERE ROWNUM <= 10) b, 
stats$sql_plan_usage c 
WHERE LOWER (a.text_subset) NOT LIKE 'insert%' AND a.sql_id = b.sql_id AND a.sql_id = c.sql_id 
GROUP BY a.sql_text, 
a.sql_id, 
b.avgcputime, 
b.avgelapstime, 
b.executions, 
b.TIME, 
b.module, 
a.piece, 
a.text_subset 
ORDER BY a.sql_id, a.piece; 

-----
select e.hash_value "E.HASH_VALUE"
     , e.module "Module"
     , e.buffer_gets - nvl(b.buffer_gets,0) "Buffer Gets"
     , e.executions - nvl(b.executions,0) "Executions"
     , Round( decode ((e.executions - nvl(b.executions, 0)), 0, to_number(NULL)
     , (e.buffer_gets - nvl(b.buffer_gets,0)) / (e.executions - nvl(b.executions,0))) ,3) "Gets / Execution"
     , Round(100*(e.buffer_gets - nvl(b.buffer_gets,0))/sp920.getGets(:DbID,:Inst_Num,&&begin_snap,&&end_snap,'NO'),3) "Percent of Total"
     , Round((e.cpu_time - nvl(b.cpu_time,0))/1000000,3) "CPU (s)"
     , Round((e.elapsed_time - nvl(b.elapsed_time,0))/1000000,3) "Elapsed (s)"
     , Round(e.fetches - nvl(b.fetches,0)) "Fetches"
     , sp920.getSQLText ( e.hash_value , 400) "SQL Statement"
  from stats$sql_summary e, stats$sql_summary b
  where b.snap_id(+) = &&Begin_Snap
    and b.dbid(+) = e.dbid
    and b.instance_number(+) = e.instance_number
    and b.hash_value(+) = e.hash_value
    and b.address(+) = e.address
    and b.text_subset(+) = e.text_subset
    and e.snap_id = &&end_snap
    and e.dbid = :dbid
    and e.instance_number = :inst_num
  order by 3 desc;
---
prompt ******** HOURLY  TOP ELAPSED TIME PER EXEC ********
COLUMN BUFFER_GETS_PER_EXEC HEADING 'BUFFER_GETS|/EXEC'
COLUMN ROWS_PROCESSED_PER_EXEC HEADING 'ROWS_PROCESSED|/EXEC'
COLUMN CPU_SEC_PER_EXEC HEADING 'CPU_SEC|/EXEC'
COLUMN ELAPSED_SEC_PER_EXEC HEADING 'ELAPSED_SEC|/EXEC'
COLUMN IO_WAIT_PER_EXEC HEADING 'IO_WAIT|/EXEC'
COLUMN CONCURRENCY_WAIT_PER_EXEC HEADING 'CONCURRENCY_WAIT|/EXEC'
COLUMN READS_PER_EXEC HEADING 'READS|/EXEC'
column  D_Date new_value   D_Date noprint
select  trunc(sysdate-&&num_days) as D_Date from dual;
prompt  specified Date is : &&D_Date
prompt Specify the starting HOUR and ending HOURS to analyse from
prompt ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
undefine begin_H end_H
col TEXT_SUBSET format a32
col SQL_TEXT format a90
set linesize 200
set pagesize 2000
alter session set nls_date_format = 'DD-MON-YY hh24:mi:ss';
prompt
prompt **** TOP ELAPSED
prompt
select * from
(
 select SQL_ID, OLD_HASH_VALUE, EXECUTIONS
 --, ROUND(READS/EXECUTIONS,2) READS_PER_EXEC
 --  , ROUND(WRITES/EXECUTIONS,2) WRITES_PER_EXEC
   ,ROUND(BUFFER_GETS/EXECUTIONS,2) BUFFER_GETS_PER_EXEC
   , ROUND((CPU/1000000)/EXECUTIONS,2) CPU_SEC_PER_EXEC
 , ROUND((ELAPSED/1000000)/EXECUTIONS,2) ELAPSED_SEC_PER_EXEC
 ,ROUND((ELAPSED/1000000),2) ELAPSED_TOTAL
  ,COST
 ,ROUND(ROWS_PROCESSED/EXECUTIONS,2) ROWS_PROCESSED_PER_EXEC
 ,ROUND((USER_IO_WAIT_TIME/1000000)/EXECUTIONS,2) IO_WAIT_PER_EXEC
  , TEXT_SUBSET
  ,TIME
 -- , SQL_TEXT
 from
 (
 select sum.SQL_ID, sum.OLD_HASH_VALUE, sum.TEXT_SUBSET, sum.SQL_TEXT, sum(EXECUTIONS) EXECUTIONS, sum(DISK_READS) READS, sum(DIRECT_WRITES) WRITES, sum(CPU_TIME) CPU, sum(ELAPSED_TIME) ELAPSED
 ,sum(BUFFER_GETS) BUFFER_GETS,sum(ROWS_PROCESSED) ROWS_PROCESSED,sum(USER_IO_WAIT_TIME) USER_IO_WAIT_TIME,TO_CHAR (sum.last_active_time, 'dd-mm-yy hh24:mi') TIME,MAX(COST) COST  
 from
 PERFSTAT.STATS$SQL_SUMMARY sum,
 PERFSTAT.STATS$SNAPSHOT snap,
  PERFSTAT.stats$sql_plan_usage plan
 where sum.snap_id=snap.snap_id
 and
 -- Last hour
-- SNAP_TIME  ; sysdate -1/24
 -- Last day
 -- SNAP_TIME  ; sysdate -1
 -- Yesterday
  SNAP_TIME between trunc(sysdate -&&num_days)+&&begin_H/24 and trunc(sysdate -&&num_days)+&&end_H/24
 --SNAP_TIME between to_date('14-MAY-2015 08:00:00','DD-MON-YYYY HH24:MI:SS') and to_date('14-MAY-2015 20:00:00','DD-MON-YYYY HH24:MI:SS')
and plan.sql_id=sum.sql_id and plan.last_active_time=sum.last_active_time
 group by sum.SQL_ID, sum.OLD_HASH_VALUE, sum.TEXT_SUBSET, SQL_TEXT,sum.last_active_time
 )
 where EXECUTIONS != 0
 order by ELAPSED_SEC_PER_EXEC desc
)
 --- limit the amount of rows returned
where rownum < 10
;
prompt *********** SYS stats                                                                                                                      
SELECT                                                                                                 ?EVENT [stats$system_event]                 STAT_NAME [stats$sysstat]                                                                  
w1.event,                                                                                              ------------------------------------ ------------------------------------------------                                                
s1.snap_time,                                                                                          ADR block file read                                  active txn count during cleanout                                                          
s1.snap_id,                                                                                            ADR block file write                                 application wait time                                                           
w1.total_waits,                                                                                        ADR file lock                                        auto extends on undo tablespace                                                 
LAG(w1.total_waits)                                                                                    AQ Background Master: slave start                    AVM au bytes allocated                                                          
OVER (ORDER BY s1.snap_id) prev_val,                                                                   AQPC idle                                            AVM bytes for file maps                                                         
w1.total_waits -                                                                                       AQPC: new master                                     AVM bytes read from disk                                                        
LAG(w1.total_waits)                                                                                    ASM file metadata operation                          AVM bytes read from flash                                                       
OVER (ORDER BY s1.snap_id) delta_val                                                                   asynch descriptor resize                             AVM count - borrowed from other node                                            
FROM stats$snapshot s1,                                                                                auto-sqltune: wait graph update                      AVM count - searched in pb                                                      
stats$system_event w1                                                                                  buffer busy waits                                    AVM count when 10% of buckets in pb                                             
WHERE s1.snap_id BETWEEN &begin_snap AND &end_snap                                                     buffer deadlock                                      AVM count when 25% of buckets in pb                                             
AND s1.snap_id = w1.snap_id                                                                            buffer exterminate                                   AVM count when 50% of buckets in pb                                             
AND w1.event = 'db file sequential read' --or w1.event like '%PX%                                      checkpoint completed                                 AVM count when 75% of buckets in pb                                             
ORDER BY w1.event, s1.snap_id;                                                                         class slave wait                                     AVM count when 90% of buckets in pb                                             
                                                                                                       control file heartbeat                               AVM file bytes allocated  
?EVENT                 SNAP_TIME         SNAP_ID TOTAL_WAITS   PREV  DELTA_VAL                         control file parallel write                          AVM file bytes deleted                                                                                                                                                                                                 
--------------------- ------------------ ------- ----------- ---------- ----------                                                                                                                                                     
dbfilesequentialRead  07-JUN-17 08:01:13   1     20631847                                             control file sequential read                         AVM files created count                                                    
dbfilesequentialRead  07-JUN-17 09:01:13   2     20656870   20631847      25023                        CSS initialization                                   AVM files deleted count                                                                                                  
prompt  -- Comparing two periods:                                                                      cursor: mutex S                                      AVM flash bytes requested                                                  
                                                                                                       cursor: mutex X                                      AVM non-flash bytes requested                                              
SELECT sy.snap_id,                                                                                     cursor: pin S                                        AVM spare statistic 1                                                           
sy.statistic# statistic#,                                                                              cursor: pin S wait on X                              AVM spare statistic 2                                                           
sy.name statname,                                                                                      cursor: pin X                                        AVM spare statistic 3                                                           
sy.value - (LAG(sy.value)                                                                              Data file init write                                 AVM spare statistic 4                                                           
OVER (PARTITION BY sy.name                                                                             Data Pump slave startup                              AVM spare statistic 5                                                           
ORDER BY sy.snap_id)) statdelta                                                                        Datapump dump file I/O                               AVM spare statistic 6                                                           
FROM stats$sysstat sy                                                                                  db file async I/O submit                             AVM spare statistic 7                                                           
WHERE sy.snap_id BETWEEN  &begin_snap AND &end_snap                                                    db file parallel read                                AVM spare statistic 8                                                           
AND sy.name IN                                                                                         db file parallel write                               background checkpoints completed                                                
('consistent gets','consistent changes',                                                               db file scattered read                               background checkpoints started                                                  
'db block gets', 'db block changes',                                                                   db file sequential read                              background timeouts                                                             
'physical read total bytes',                                                                           db file single write                                 Batched IO (bound) vector count                                                 
'physical read total IO requests',                                                                     DIAG idle wait                                       Batched IO (full) vector count                                                  
'physical read total multi block requests','Workload Capture: dbtime')                                 direct path read                                     Batched IO (space) vector count                                                 
ORDER BY sy.name, sy.snap_id;                                                                          direct path read temp                                Batched IO block miss count                                                     
                                                                                                       direct path sync                                     Batched IO buffer defrag count                                                  
 ===                                                                                                   direct path write                                    Batched IO double miss count                                                    
                                                                                                       direct path write temp                               Batched IO same unit count                                                      
  SNAP_ID STATISTIC# STATNAME                                                          STATDELTA       Disk file I/O Calibration                            Batched IO single block count                                                   
--------- ---------- ---------------------------------------------------------------- ----------       Disk file Mirror/Media Repair Write                  Batched IO slow jump count                                                      
        1        824 Workload Capture: dbtime                                                          Disk file operations I/O                             Batched IO vector block count                                                   
        2        824 Workload Capture: dbtime                                                  0       dispatcher timer                                     Batched IO vector read count                                                    
        3        824 Workload Capture: dbtime                                                  0       enq: BF - allocation contention                      Batched IO zero block count                                                     
        4        824 Workload Capture: dbtime                                                  0       enq: CF - contention                                 Block Cleanout Optim referenced                                                 
        1         95 consistent changes                                                                enq: CR - block range reuse ckpt                     blocks decrypted                                                                
        2         95 consistent changes                                                    68816       enq: CU - contention                                 blocks encrypted                                                                
        3         95 consistent changes                                                    88433       enq: HW - contention                                 branch node splits                                                              
        4         95 consistent changes                                                   139264       enq: JS - contention                                 buffer is not pinned count                                                      
        1         79 consistent gets                                                                   enq: JS - q mem clnup lck                            buffer is pinned count                                                          
        2         79 consistent gets                                                    54179880       enq: JS - queue lock                                 bytes received via SQL*Net from client                                          
        3         79 consistent gets                                                    42213477       enq: KO - fast object checkpoint                     bytes received via SQL*Net from dblink                                          
        4         79 consistent gets                                                    67155119       enq: PR - contention                                 bytes sent via SQL*Net to client                                                
        1         94 db block changes                                                                  enq: PS - contention                                 bytes sent via SQL*Net to dblink                                                
        2         94 db block changes                                                    1271660       enq: PV - syncstart                                  bytes via SQL*Net vector from client                                            
        3         94 db block changes                                                     445351       enq: RO - fast object reuse                          bytes via SQL*Net vector from dblink                                            
        4         94 db block changes                                                     638206       enq: SQ - contention                                 bytes via SQL*Net vector to client                                              
        1         75 db block gets                                                                     enq: TM - contention                                 bytes via SQL*Net vector to dblink                                              
        2         75 db block gets                                                       1341423       enq: TQ - DDL contention                             Cached Commit SCN referenced                                                    
        3         75 db block gets                                                        431444       enq: TX - contention                                 calls to get snapshot scn: kcmgss                                               
        4         75 db block gets                                                        640768       enq: TX - index contention                           calls to kcmgas                                                                 
        1         48 physical read total IO requests                                                   enq: TX - row lock contention                        calls to kcmgcs                                                                 
        2         48 physical read total IO requests                                       45074       enq: UL - contention                                 calls to kcmgrs                                                                 
        3         48 physical read total IO requests                                       34717       enq: WF - contention                                 CCursor + sql area evicted                                                      
        4         48 physical read total IO requests                                       37488       fbar timer                                           cell blocks helped by commit cache                                              
        1         53 physical read total bytes                                                         heartbeat redo informer                              cell blocks helped by minscn optimization                                       
        2         53 physical read total bytes                                         842915840       inactive session                                     cell blocks processed by cache layer                                            
        3         53 physical read total bytes                                         392818688       instance state change                                cell blocks processed by data layer                                             
        4         53 physical read total bytes                                         424015872       jobq slave wait                                      cell blocks processed by index layer                                            
        1         49 physical read total multi block requests                                          JOX Jit Process Sleep                                cell blocks processed by txn layer                                              
        2         49 physical read total multi block requests                                432       JS kgl get object wait                               cell commit cache queries                                                       
        3         49 physical read total multi block requests                                  6       kksfbc child completion                              cell CUs processed for compressed                                               
        4         49 physical read total multi block requests                                 12       KSV master wait                                      cell CUs processed for uncompressed                                             
                                                                                                       kupp process wait                                    cell CUs sent compressed                                                        
                                                                                                       latch free                                           cell CUs sent head piece                                                        
STATSPACK_TABLES                                                                                       latch: active service list                           cell CUs sent uncompressed                                                      
--------------------------------                                                                       latch: cache buffers chains                          cell flash cache read hits                                                      
STATS$BUFFERED_QUEUES                                                                                  latch: cache buffers lru chain                       cell index scans                                                                
STATS$BUFFERED_SUBSCRIBERS                                                                             latch: call allocation                               cell IO uncompressed bytes                                                      
STATS$BUFFER_POOL_STATISTICS                                                                           latch: checkpoint queue latch                        cell num bytes of IO reissued due to relocation                                 
STATS$CR_BLOCK_SERVER                                                                                  latch: enqueue hash chains                           cell num fast response sessions                                                 
STATS$CURRENT_BLOCK_SERVER                                                                             latch: In memory undo latch                          cell num fast response sessions continuing to smart scan                        
STATS$DATABASE_INSTANCE                                                                                latch: messages                                      cell num smart file creation sessions using rdbms block IO mode                 
STATS$DB_CACHE_ADVICE                                                                                  latch: object queue header operation                 cell num smart IO sessions in rdbms block IO due to big payload                 
STATS$DLM_MISC                                                                                         latch: parallel query alloc buffer                   cell num smart IO sessions in rdbms block IO due to no cell mem                 
STATS$DYNAMIC_REMASTER_STATS                                                                           latch: redo allocation                               cell num smart IO sessions in rdbms block IO due to open fail                   
STATS$ENQUEUE_STATISTICS                                                                               latch: redo writing                                  cell num smart IO sessions in rdbms block IO due to user                        
STATS$EVENT_HISTOGRAM                                                                                  latch: row cache objects                             cell num smart IO sessions using passthru mode due to cellsrv                   
STATS$FILESTATXS                                                                                       latch: shared pool                                   cell num smart IO sessions using passthru mode due to timezone                  
STATS$FILE_HISTOGRAM                                                                                   LGWR all worker groups                               cell num smart IO sessions using passthru mode due to user                      
STATS$IDLE_EVENT                                                                                       LGWR any worker group                                cell num smartio automem buffer allocation attempts                             
STATS$INSTANCE_CACHE_TRANSFER                                                                          LGWR wait for redo copy                              cell num smartio automem buffer allocation failures                             
STATS$INSTANCE_RECOVERY                                                                                LGWR worker group idle                               cell num smartio permanent cell failures                                        
STATS$INTERCONNECT_PINGS                                                                               LGWR worker group ordering                           cell num smartio transient cell failures                                        
STATS$IOSTAT_FUNCTION                                                                                  library cache load lock                              cell physical IO bytes eligible for predicate offload                           
STATS$IOSTAT_FUNCTION_DETAIL                                                                           library cache lock                                   cell physical IO bytes saved by storage index                                   
STATS$IOSTAT_FUNCTION_NAME                                                                             library cache pin                                    cell physical IO bytes saved during optimized file creation                     
STATS$JAVA_POOL_ADVICE                                                                                 library cache: mutex X                               cell physical IO bytes saved during optimized RMAN file restore                 
STATS$LATCH                                                                                            local write wait                                     cell physical IO bytes sent directly to DB node to balance CPU                  
STATS$LATCH_CHILDREN                                                                                   Log archive I/O                                      cell physical IO interconnect bytes                                             
STATS$LATCH_MISSES_SUMMARY                                                                             log file parallel write                              cell physical IO interconnect bytes returned by smart scan                      
STATS$LATCH_PARENT                                                                                     log file sequential read                             cell scans                                                                      
STATS$LEVEL_DESCRIPTION                                                                                log file single write                                cell simulated physical IO bytes eligible for predicate offload                 
STATS$LIBRARYCACHE                                                                                     log file switch (checkpoint incomplete)              cell simulated physical IO bytes returned by predicate offload                  
STATS$MEMORY_DYNAMIC_COMPS                                                                             switch (private strand flush incomplete)             cell smart IO session cache hard misses      log      
STATS$MEMORY_RESIZE_OPS                                                                                log file switch completion                           cell smart IO session cache hits                                                
STATS$MEMORY_TARGET_ADVICE                                                                             log file sync                                        cell smart IO session cache hwm                                                 
STATS$MUTEX_SLEEP                                                                                      lreg timer                                           cell smart IO session cache lookups                                             
STATS$OSSTAT                                                                                           master exit                                          cell smart IO session cache soft misses       file 
STATS$OSSTATNAME                                                                                       optimizer stats update retry                         cell statistics spare1                                                          
STATS$PARAMETER                                                                                        oracle thread bootstrap                              cell statistics spare2                                                          
STATS$PGASTAT                                                                                          os thread creation                                   cell statistics spare3                                                          
STATS$PGA_TARGET_ADVICE                                                                                parallel recovery coord send blocked                 cell statistics spare4                                                          
STATS$PROCESS_MEMORY_ROLLUP                                                                            parallel recovery coord wait for reply               cell statistics spare5                                                          
STATS$PROCESS_ROLLUP                                                                                   parallel recovery slave idle wait                    cell statistics spare6                                                          
STATS$PROPAGATION_RECEIVER                                                                             parallel recovery slave wait for change              cell transactions found in commit cache                                         
STATS$PROPAGATION_SENDER                                                                               Parameter File I/O                                   chained rows processed by cell                                                  
STATS$RESOURCE_LIMIT                                                                                   PL/SQL lock timer                                    chained rows rejected by cell                                                   
STATS$ROLLSTAT                                                                                         pmon timer                                           chained rows skipped by cell                                                    
STATS$ROWCACHE_SUMMARY                                                                                 PX Deq Credit: free buffer                           change write time                                                               
STATS$RULE_SET                                                                                         PX Deq Credit: need buffer                           checkpoint clones created for ADG recovery                                      
STATS$SEG_STAT                                                                                         PX Deq Credit: send blkd                             cleanout - number of ktugct calls                                               
STATS$SEG_STAT_OBJ                                                                                     PX Deq: Execute Reply                                cleanouts and rollbacks - consistent read gets                                  
STATS$SESSION_EVENT                                                                                    PX Deq: Execution Msg                                cleanouts only - consistent read gets                                           
STATS$SESSTAT                                                                                          PX Deq: Join ACK                                     CLI BG attempt Flush                                                            
STATS$SESS_TIME_MODEL                                                                                  PX Deq: Parse Reply                                  CLI BG ENQ                                                                      
STATS$SGA                                                                                              PX Deq: Signal ACK EXT                               CLI BG Fls done                                                                 
STATS$SGASTAT                                                                                          PX Deq: Slave Join Frag                              CLI Buf Wrt                                                                     
STATS$SGA_TARGET_ADVICE                                                                                PX Deq: Slave Session Stats                          CLI bytes fls to ext                                                            
STATS$SHARED_POOL_ADVICE                                                                               PX Deq: Table Q Get Keys                             CLI bytes fls to table                                                          
STATS$SNAPSHOT                                                                                         PX Deq: Table Q Normal                               CLI Client Flush                                                                
STATS$SQLTEXT                                                                                          PX Deq: Table Q qref                                 CLI Flstask create                                                              
STATS$SQL_PLAN                                                                                         PX Deq: Table Q Sample                               CLI Flush                                                                       
STATS$SQL_PLAN_USAGE                                                                                   PX Deq: Test for credit                              CLI Imm Wrt                                                                     
STATS$SQL_STATISTICS                                                                                   PX Deque wait                                        CLI Prvtz Lob                                                                   
STATS$SQL_SUMMARY                                                                                      PX Idle Wait                                         CLI SGA Alloc                                                                   
STATS$SQL_WORKAREA_HISTOGRAM                                                                           PX qref latch                                        CLI Thru Wrt                                                                    
STATS$STATSPACK_PARAMETER                                                                              rdbms ipc message                                    cluster key scan block gets                                                     
STATS$STREAMS_APPLY_SUM                                                                                rdbms ipc reply                                      cluster key scans                                                               
STATS$STREAMS_CAPTURE                                                                                  read by other session                                cluster wait time                                                               
STATS$STREAMS_POOL_ADVICE                                                                              recovery read                                        Clusterwide global transactions                                                 
STATS$SYSSTAT                                                                                          reliable message                                     Clusterwide global transactions spanning RAC nodes                              
STATS$SYSTEM_EVENT                                                                                     resmgr:cpu quantum                                   cold recycle reads                                                              
STATS$SYS_TIME_MODEL                                                                                   resmgr:internal state change                         commit batch performed                                                          
STATS$TEMPSTATXS                                                                                       row cache lock                                       commit batch requested                                                          
STATS$TEMP_SQLSTATS                                                                                    SGA: allocation forcing component growth             commit batch/immediate performed                                                
STATS$THREAD                                                                                           SGA: MMAN sleep for component shrink                 commit batch/immediate requested                                                
STATS$TIME_MODEL_STATNAME                                                                              shared server idle wait                              commit cleanout failures: block lost                                            
STATS$UNDOSTAT                                                                                         smon timer                                           commit cleanout failures: buffer being written                                  
STATS$WAITSTAT                                                                                         Space Manager: slave idle wait                       commit cleanout failures: callback failure                                      
                                                                                                       SQL*Net break/reset to client                        commit cleanout failures: cannot pin                                            
                                                                                                       SQL*Net message from client                          commit cleanout failures: hot backup in progress                                
                                                                                                       SQL*Net message to client                            commit cleanout failures: write disabled                                        
                                                                                                       SQL*Net more data from client                        commit cleanouts                                                                
                                                                                                       SQL*Net more data to client                          commit cleanouts successfully completed                                         
                                                                                                       SQL*Net vector data from client                      commit immediate performed                                                      
                                                                                                         Streams AQ: deallocate messages from Streams Pool  commit immediate requested                                                      
                                                                                                         Streams AQ: enqueue blocked on low memory          commit nowait performed                                                         
                                                                                                       Streams AQ: load balancer idle                       commit nowait requested                                                         
                                                                                                       
                                                                                                                Streams AQ: qmn coordinator idle wait                Commit SCN cached                                                               
                                                                                                       Streams AQ: qmn slave idle wait                      commit txn count during cleanout                                                
                                                                                                       Streams AQ: waiting for time management or cleanup   commit wait performed                                                           
                                                                                                        tasks                                               commit wait requested                                                           
                                                                                                       target log write size                                commit wait/nowait performed                                                    
                                                                                                       undo segment extension                               commit wait/nowait requested                                                    
                                                                                                       utl_file I/O                                         concurrency wait time                                                           
                                                                                                       VKRM Idle                                            consistent changes                                                              
                                                                                                       wait for unread message on broadcast channel         consistent gets                                                                 
                                                                                                       wait list latch free                                 consistent gets direct                                                          
                                                                                                       write complete waits                                 consistent gets examination                                                     
                                                                                                                                                            consistent gets examination (fastpath)                                          
The following new idle events names have been added in 12.1 and may appear in STATSPACK reports:                                                            consistent gets from cache                                                      
                                                                                                                                                            consistent gets pin                                                             
     Virtual circuit next request                                                                                                                           consistent gets pin (fastpath)                                                  
     AQ Cross Master idle                                                                                                                                   CPU used by this session                                                        
     AQ: 12c message cache init wait                                                                                                                        CPU used when call started                                                      
     AQPC idle                                                                                                                                              CR blocks created                                                               
     Emon coordinator main loop                                                                                                                             current blocks converted for CR                                                 
     Emon slave main loop                                                                                                                                   cursor authentications                                                          
     LGWR worker group idle                                                                                                                                 cvmap unavailable                                                               
     OFS idle                                                                                                                                               data blocks consistent reads - undo records applied                             
     REPL Apply: txns                                                                                                                                       data warehousing cooling action                                                 
     REPL Capture/Apply: RAC AQ qmn coordinator                                                                                                             data warehousing evicted objects                                                
     REPL Capture/Apply: messages                                                                                                                           data warehousing evicted objects - cooling                                      
     REPL Capture: archive log                                                                                                                              data warehousing evicted objects - replace                                      
     Recovery Server Comm SGA setup wait                                                                                                                    data warehousing scanned chunks                                                 
     Recovery Server Servlet wait                                                                                                                           data warehousing scanned chunks - disk                                          
     Recovery Server Surrogate wait                                                                                                                         data warehousing scanned chunks - flash                                         
     Recovery Server waiting for work                                                                                                                       data warehousing scanned chunks - memory                                        
     Recovery Server waiting restore start                                                                                                                  data warehousing scanned objects                                                
     Sharded  Queues : Part Maintenance idle                                                                                                                db block changes                                                                
     Streams AQ: load balancer idle                                                                                                                         db block gets                                                                   
     gopp msggopp msg                                                                                                                                       db block gets direct                                                            
     heartbeat redo informer                                                                                                                                db block gets from cache                                                        
     iowp file id                                                                                                                                           db block gets from cache (fastpath)                                             
     iowp msg                                                                                                                                               db corrupt blocks detected                                                      
     lreg timer                                                                                                                                             db corrupt blocks recovered                                                     
     netp network                                                                                                                                           DB time                                                                         
     parallel recovery coordinator idle wait                                                                                                                DBWR checkpoint buffers written                                                 
     recovery merger idle wait                                                                                                                              DBWR checkpoints                                                                
     recovery receiver idle wait                                                                                                                            DBWR fusion writes                                                              
     recovery sender idle wait                                                                                                                              DBWR lru scans                                                                  
     imco timer                                                                                                                                             DBWR object drop buffers written                                                
     process in prespawned state                                                                                                                            DBWR parallel query checkpoint buffers written                                  
                                                                                                                                                            DBWR revisited being-written buffer                                             
                                                                                                                                                            DBWR tablespace checkpoint buffers written                                      
                                                                                                                                                            DBWR thread checkpoint buffers written                                          
                                                                                                                                                            DBWR transaction table writes                                                   
                                                                                                                                                            DBWR undo block writes                                                          
                                                                                                                                                            DDL statements parallelized                                                     
                                                                                                                                                            deferred (CURRENT) block cleanout applications                                  
                                                                                                                                                            deferred CUR cleanouts (index blocks)                                           
                                                                                                                                                            DFO trees parallelized                                                          
                                                                                                                                                            dirty buffers inspected                                                         
                                                                                                                                                            DML statements parallelized                                                     
                                                                                                                                                            doubling up with imu segment                                                    
                                                                                                                                                            drop segment calls in space pressure                                            
                                                                                                                                                            DX/BB enqueue lock background get time                                          
                                                                                                                                                            DX/BB enqueue lock background gets                                              
                                                                                                                                                            DX/BB enqueue lock foreground requests                                          
                                                                                                                                                            DX/BB enqueue lock foreground wait time                                         
                                                                                                                                                            Effective IO time                                                               
                                                                                                                                                            EHCC Analyze CUs Decompressed                                                   
                                                                                                                                                            EHCC Analyzer Calls                                                             
                                                                                                                                                            EHCC Archive CUs Compressed                                                     
                                                                                                                                                            EHCC Archive CUs Decompressed                                                   
                                                                                                                                                            EHCC Attempted Block Compressions                                               
                                                                                                                                                            EHCC Block Compressions                                                         
                                                                                                                                                            EHCC Check CUs Decompressed                                                     
                                                                                                                                                            EHCC Columns Decompressed                                                       
                                                                                                                                                            EHCC Compressed Length Compressed                                               
                                                                                                                                                            EHCC Compressed Length Decompressed                                             
                                                                                                                                                            EHCC Conventional DMLs                                                          
                                                                                                                                                            EHCC CU Row Pieces Compressed                                                   
                                                                                                                                                            EHCC CUs Compressed                                                             
                                                                                                                                                            EHCC CUs Decompressed                                                           
                                                                                                                                                            EHCC Decompressed Length Compressed                                             
                                                                                                                                                            EHCC Decompressed Length Decompressed                                           
                                                                                                                                                            EHCC DML CUs Decompressed                                                       
                                                                                                                                                            EHCC Dump CUs Decompressed                                                      
                                                                                                                                                            EHCC Normal Scan CUs Decompressed                                               
                                                                                                                                                            EHCC Pieces Buffered for Decompression                                          
                                                                                                                                                            EHCC Query High CUs Compressed                                                  
                                                                                                                                                            EHCC Query High CUs Decompressed                                                
                                                                                                                                                            EHCC Query Low CUs Compressed                                                   
                                                                                                                                                            EHCC Query Low CUs Decompressed                                                 
                                                                                                                                                            EHCC Rowid CUs Decompressed                                                     
                                                                                                                                                            EHCC Rows Compressed                                                            
                                                                                                                                                            EHCC Rows Not Compressed                                                        
                                                                                                                                                            EHCC Total Columns for Decompression                                            
                                                                                                                                                            EHCC Total Pieces for Decompression                                             
                                                                                                                                                            EHCC Total Rows for Decompression                                               
                                                                                                                                                            EHCC Turbo Scan CUs Decompressed                                                
                                                                                                                                                            EHCC Used on Pillar Tablespace                                                  
                                                                                                                                                            EHCC Used on ZFS Tablespace                                                     
                                                                                                                                                            enqueue conversions                                                             
                                                                                                                                                            enqueue deadlocks                                                               
                                                                                                                                                            enqueue releases                                                                
                                                                                                                                                            enqueue requests                                                                
                                                                                                                                                            enqueue timeouts                                                                
                                                                                                                                                            enqueue waits                                                                   
                                                                                                                                                            exchange deadlocks                                                              
                                                                                                                                                            execute count                                                                   
                                                                                                                                                            failed probes on index block reclamation                                        
                                                                                                                                                            fastpath consistent get quota limit                                             
                                                                                                                                                            fbda woken up                                                                   
                                                                                                                                                            file io service time                                                            
                                                                                                                                                            file io wait time                                                               
                                                                                                                                                            flash cache eviction: aged out                                                  
                                                                                                                                                            flash cache eviction: buffer pinned                                             
                                                                                                                                                            flash cache eviction: invalidated                                               
                                                                                                                                                            flash cache insert skip: corrupt                                                
                                                                                                                                                            flash cache insert skip: DBWR overloaded                                        
                                                                                                                                                            flash cache insert skip: exists                                                 
                                                                                                                                                            flash cache insert skip: modification                                           
                                                                                                                                                            flash cache insert skip: not current                                            
                                                                                                                                                            flash cache insert skip: not useful                                             
                                                                                                                                                            flash cache inserts                                                             
                                                                                                                                                            flashback cache read optimizations for block new                                
                                                                                                                                                            flashback direct read optimizations for block new                               
                                                                                                                                                            flashback log write bytes                                                       
                                                                                                                                                            flashback log writes                                                            
                                                                                                                                                            flashback securefile cache read optimizations for block new                     
                                                                                                                                                            flashback securefile direct read optimizations for block new                    
                                                                                                                                                            foreground propagated tracked transactions                                      
                                                                                                                                                            Forwarded 2PC commands across RAC nodes                                         
                                                                                                                                                            frame signature mismatch                                                        
                                                                                                                                                            free buffer inspected                                                           
                                                                                                                                                            free buffer requested                                                           
                                                                                                                                                            gc blocks compressed                                                            
                                                                                                                                                            gc blocks corrupt                                                               
                                                                                                                                                            gc blocks lost                                                                  
                                                                                                                                                            gc claim blocks lost                                                            
                                                                                                                                                            gc cleanout applied                                                             
                                                                                                                                                            gc cleanout no space                                                            
                                                                                                                                                            gc cleanout saved                                                               
                                                                                                                                                            gc CPU used by this session                                                     
                                                                                                                                                            gc cr block build time                                                          
                                                                                                                                                            gc cr block flush time                                                          
                                                                                                                                                            gc cr block receive time                                                        
                                                                                                                                                            gc cr block send time                                                           
                                                                                                                                                            gc cr blocks received                                                           
                                                                                                                                                            gc cr blocks received with BPS                                                  
                                                                                                                                                            gc cr blocks served                                                             
                                                                                                                                                            gc cr blocks served with BPS                                                    
                                                                                                                                                            gc current block flush time                                                     
                                                                                                                                                            gc current block pin time                                                       
                                                                                                                                                            gc current block receive time                                                   
                                                                                                                                                            gc current block send time                                                      
                                                                                                                                                            gc current blocks received                                                      
                                                                                                                                                            gc current blocks received with BPS                                             
                                                                                                                                                            gc current blocks served                                                        
                                                                                                                                                            gc current blocks served with BPS                                               
                                                                                                                                                            gc force cr disk read                                                           
                                                                                                                                                            gc ka grant receive time                                                        
                                                                                                                                                            gc ka grants received                                                           
                                                                                                                                                            gc kbytes saved                                                                 
                                                                                                                                                            gc kbytes sent                                                                  
                                                                                                                                                            gc local grants                                                                 
                                                                                                                                                            gc read wait failures                                                           
                                                                                                                                                            gc read wait time                                                               
                                                                                                                                                            gc read wait timeouts                                                           
                                                                                                                                                            gc read waits                                                                   
                                                                                                                                                            gc reader bypass grants                                                         
                                                                                                                                                            gc reader bypass waits                                                          
                                                                                                                                                            gc remote grants                                                                
                                                                                                                                                            gcs messages sent                                                               
                                                                                                                                                            ges messages sent                                                               
                                                                                                                                                            global enqueue CPU used by this session                                         
                                                                                                                                                            global enqueue get time                                                         
                                                                                                                                                            global enqueue gets async                                                       
                                                                                                                                                            global enqueue gets sync                                                        
                                                                                                                                                            global enqueue releases                                                         
                                                                                                                                                            global undo segment hints helped                                                
                                                                                                                                                            global undo segment hints were stale                                            
                                                                                                                                                            GTX processes spawned by autotune                                               
                                                                                                                                                            GTX processes stopped by autotune                                               
                                                                                                                                                            heap block compress                                                             
                                                                                                                                                            Heap Segment Array Inserts                                                      
                                                                                                                                                            Heap Segment Array Updates                                                      
                                                                                                                                                            Heatmap Blklevel Flush Task Count                                               
                                                                                                                                                            Heatmap BlkLevel Flush Task Create                                              
                                                                                                                                                            Heatmap BlkLevel Flushed                                                        
                                                                                                                                                            Heatmap BlkLevel Flushed to BF                                                  
                                                                                                                                                            Heatmap BlkLevel Flushed to SYSAUX                                              
                                                                                                                                                            Heatmap BlkLevel Not Tracked - Memory                                           
                                                                                                                                                            Heatmap BlkLevel Not Updated - Repeat                                           
                                                                                                                                                            Heatmap BlkLevel Ranges Flushed                                                 
                                                                                                                                                            Heatmap BlkLevel Ranges Skipped                                                 
                                                                                                                                                            Heatmap BlkLevel Tracked                                                        
                                                                                                                                                            Heatmap SegLevel - Flush                                                        
                                                                                                                                                            Heatmap SegLevel - Full Table Scan                                              
                                                                                                                                                            Heatmap SegLevel - IndexLookup                                                  
                                                                                                                                                            Heatmap SegLevel - Segments flushed                                             
                                                                                                                                                            Heatmap SegLevel - TableLookup                                                  
                                                                                                                                                            Heatmap SegLevel - Write                                                        
                                                                                                                                                            hot buffers moved to head of LRU                                                
                                                                                                                                                            HSC Compressed Segment Block Changes                                            
                                                                                                                                                            HSC Heap Segment Block Changes                                                  
                                                                                                                                                            HSC IDL Compressed Blocks                                                       
                                                                                                                                                            HSC OLTP Compressed Blocks                                                      
                                                                                                                                                            HSC OLTP compression block checked                                              
                                                                                                                                                            HSC OLTP Compression skipped rows                                               
                                                                                                                                                            HSC OLTP Compression wide compressed row pieces                                 
                                                                                                                                                            HSC OLTP Drop Column                                                            
                                                                                                                                                            HSC OLTP inline compression                                                     
                                                                                                                                                            HSC OLTP negative compression                                                   
                                                                                                                                                            HSC OLTP Non Compressible Blocks                                                
                                                                                                                                                            HSC OLTP positive compression                                                   
                                                                                                                                                            HSC OLTP recursive compression                                                  
                                                                                                                                                            HSC OLTP Space Saving                                                           
                                                                                                                                                            immediate (CR) block cleanout applications                                      
                                                                                                                                                            immediate (CURRENT) block cleanout applications                                 
                                                                                                                                                            immediate CR cleanouts (index blocks)                                           
                                                                                                                                                            IMU bind flushes                                                                
                                                                                                                                                            IMU commits                                                                     
                                                                                                                                                            IMU contention                                                                  
                                                                                                                                                            IMU CR rollbacks                                                                
                                                                                                                                                            IMU Flushes                                                                     
                                                                                                                                                            IMU ktichg flush                                                                
                                                                                                                                                            IMU mbu flush                                                                   
                                                                                                                                                            IMU pool not allocated                                                          
                                                                                                                                                            IMU recursive-transaction flush                                                 
                                                                                                                                                            IMU Redo allocation size                                                        
                                                                                                                                                            IMU undo allocation size                                                        
                                                                                                                                                            IMU undo retention flush                                                        
                                                                                                                                                            IMU- failed to get a private strand                                             
                                                                                                                                                            in call idle wait time                                                          
                                                                                                                                                            index cmph gencu, uncomp sentinals                                              
                                                                                                                                                            index cmph ld, CU fit                                                           
                                                                                                                                                            index cmph ld, CU fit, add rows                                                 
                                                                                                                                                            index cmph ld, CU negative comp                                                 
                                                                                                                                                            index cmph ld, CU over-est                                                      
                                                                                                                                                            index cmph ld, CU under-est                                                     
                                                                                                                                                            index cmph ld, lf blks flushed                                                  
                                                                                                                                                            index cmph ld, lf blks w/ und CU                                                
                                                                                                                                                            index cmph ld, lf blks w/o CU                                                   
                                                                                                                                                            index cmph ld, lf blks w/o unc r                                                
                                                                                                                                                            index cmph ld, retry in over-est                                                
                                                                                                                                                            index cmph ld, rows compressed                                                  
                                                                                                                                                            index cmph ld, rows uncompressed                                                
                                                                                                                                                            index compression (ADVANCED HIGH) leaf block 90_10 splits faile                 
                                                                                                                                                            index compression (ADVANCED HIGH) leaf block splits avoided                     
                                                                                                                                                            index compression (ADVANCED LOW) blocks not compressed                          
                                                                                                                                                            index compression (ADVANCED LOW) prefix change at block                         
                                                                                                                                                            index compression (ADVANCED LOW) prefix no change at block                      
                                                                                                                                                            index compression (ADVANCED LOW) reorg avoid split                              
                                                                                                                                                            index crx upgrade (found)                                                       
                                                                                                                                                            index crx upgrade (positioned)                                                  
                                                                                                                                                            index crx upgrade (prefetch)                                                    
                                                                                                                                                            index fast full scans (direct read)                                             
                                                                                                                                                            index fast full scans (full)                                                    
                                                                                                                                                            index fast full scans (rowid ranges)                                            
                                                                                                                                                            index fetch by key                                                              
                                                                                                                                                            index reclamation/extension switch                                              
                                                                                                                                                            index scans kdiixs1                                                             
                                                                                                                                                            IPC CPU used by this session                                                    
                                                                                                                                                            java call heap collected bytes                                                  
                                                                                                                                                            java call heap collected count                                                  
                                                                                                                                                            java call heap gc count                                                         
                                                                                                                                                            java call heap live object count                                                
                                                                                                                                                            java call heap live object count max                                            
                                                                                                                                                            java call heap live size                                                        
                                                                                                                                                            java call heap live size max                                                    
                                                                                                                                                            java call heap object count                                                     
                                                                                                                                                            java call heap object count max                                                 
                                                                                                                                                            java call heap total size                                                       
                                                                                                                                                            java call heap total size max                                                   
                                                                                                                                                            java call heap used size                                                        
                                                                                                                                                            java call heap used size max                                                    
                                                                                                                                                            java session heap collected bytes                                               
                                                                                                                                                            java session heap collected count                                               
                                                                                                                                                            java session heap gc count                                                      
                                                                                                                                                            java session heap live object count                                             
                                                                                                                                                            java session heap live object count max                                         
                                                                                                                                                            java session heap live size                                                     
                                                                                                                                                            java session heap live size max                                                 
                                                                                                                                                            java session heap object count                                                  
                                                                                                                                                            java session heap object count max                                              
                                                                                                                                                            java session heap used size                                                     
                                                                                                                                                            java session heap used size max                                                 
                                                                                                                                                            ka grants received                                                              
                                                                                                                                                            ka messages sent                                                                
                                                                                                                                                            KTFB alloc myinst                                                               
                                                                                                                                                            KTFB alloc req                                                                  
                                                                                                                                                            KTFB alloc search FFB                                                           
                                                                                                                                                            KTFB alloc space (block)                                                        
                                                                                                                                                            KTFB alloc steal                                                                
                                                                                                                                                            KTFB alloc time (ms)                                                            
                                                                                                                                                            KTFB apply req                                                                  
                                                                                                                                                            KTFB apply time (ms)                                                            
                                                                                                                                                            KTFB commit req                                                                 
                                                                                                                                                            KTFB commit time (ms)                                                           
                                                                                                                                                            KTFB free req                                                                   
                                                                                                                                                            KTFB free space (block)                                                         
                                                                                                                                                            KTFB free time (ms)                                                             
                                                                                                                                                            large tracked transactions                                                      
                                                                                                                                                            leaf node 90-10 splits                                                          
                                                                                                                                                            leaf node splits                                                                
                                                                                                                                                            lob reads                                                                       
                                                                                                                                                            LOB table id lookup cache misses                                                
                                                                                                                                                            lob writes                                                                      
                                                                                                                                                            lob writes unaligned                                                            
                                                                                                                                                            local undo segment hints helped                                                 
                                                                                                                                                            local undo segment hints were stale                                             
                                                                                                                                                            logical read bytes from cache                                                   
                                                                                                                                                            logons cumulative                                                               
                                                                                                                                                            logons current                                                                  
                                                                                                                                                            max cf enq hold time                                                            
                                                                                                                                                            messages received                                                               
                                                                                                                                                            messages sent                                                                   
                                                                                                                                                            min active SCN optimization applied on CR                                       
                                                                                                                                                            Misses for writing mapping                                                      
                                                                                                                                                            no buffer to keep pinned count                                                  
                                                                                                                                                            no work - consistent read gets                                                  
                                                                                                                                                            No. of Decrypt ops                                                              
                                                                                                                                                            No. of Encrypt ops                                                              
                                                                                                                                                            No. of Namespaces Created                                                       
                                                                                                                                                            No. of Principal Cache Misses                                                   
                                                                                                                                                            No. of Principal Invalidations                                                  
                                                                                                                                                            No. of Roles Enabled or Disabled                                                
                                                                                                                                                            No. of User Callbacks Executed                                                  
                                                                                                                                                            No. of XS Sessions Attached                                                     
                                                                                                                                                            No. of XS Sessions Created                                                      
                                                                                                                                                            non-idle wait count                                                             
                                                                                                                                                            non-idle wait time                                                              
                                                                                                                                                            Number of FORMAT_PRESERVING redactions                                          
                                                                                                                                                            Number of FULL redactions                                                       
                                                                                                                                                            number of map misses                                                            
                                                                                                                                                            number of map operations                                                        
                                                                                                                                                            Number of NONE redactions                                                       
                                                                                                                                                            Number of PARTIAL redactions                                                    
                                                                                                                                                            Number of RANDOM redactions                                                     
                                                                                                                                                            Number of read IOs issued                                                       
                                                                                                                                                            Number of REGEXP redactions                                                     
                                                                                                                                                            OLAP Aggregate Function Calc                                                    
                                                                                                                                                            OLAP Aggregate Function Logical NA                                              
                                                                                                                                                            OLAP Aggregate Function Precompute                                              
                                                                                                                                                            OLAP Custom Member Limit                                                        
                                                                                                                                                            OLAP Engine Calls                                                               
                                                                                                                                                            OLAP Fast Limit                                                                 
                                                                                                                                                            OLAP Full Limit                                                                 
                                                                                                                                                            OLAP GID Limit                                                                  
                                                                                                                                                            OLAP Import Rows Loaded                                                         
                                                                                                                                                            OLAP Import Rows Pushed                                                         
                                                                                                                                                            OLAP INHIER Limit                                                               
                                                                                                                                                            OLAP Limit Time                                                                 
                                                                                                                                                            OLAP Paging Manager Cache Changed Page                                          
                                                                                                                                                            OLAP Paging Manager Cache Hit                                                   
                                                                                                                                                            OLAP Paging Manager Cache Miss                                                  
                                                                                                                                                            OLAP Paging Manager Cache Write                                                 
                                                                                                                                                            OLAP Paging Manager New Page                                                    
                                                                                                                                                            OLAP Paging Manager Pool Size                                                   
                                                                                                                                                            OLAP Perm LOB Read                                                              
                                                                                                                                                            OLAP Row Id Limit                                                               
                                                                                                                                                            OLAP Row Load Time                                                              
                                                                                                                                                            OLAP Row Source Rows Processed                                                  
                                                                                                                                                            OLAP Session Cache Hit                                                          
                                                                                                                                                            OLAP Session Cache Miss                                                         
                                                                                                                                                            OLAP Temp Segment Read                                                          
                                                                                                                                                            OLAP Temp Segments                                                              
                                                                                                                                                            OLAP Unique Key Attribute Limit                                                 
                                                                                                                                                            opened cursors cumulative                                                       
                                                                                                                                                            opened cursors current                                                          
                                                                                                                                                            OS CPU Qt wait time                                                             
                                                                                                                                                            OTC commit optimization attempts                                                
                                                                                                                                                            OTC commit optimization failure - setup                                         
                                                                                                                                                            OTC commit optimization hits                                                    
                                                                                                                                                            Parallel operations downgraded 1 to 25 pct                                      
                                                                                                                                                            Parallel operations downgraded 25 to 50 pct                                     
                                                                                                                                                            Parallel operations downgraded 50 to 75 pct                                     
                                                                                                                                                            Parallel operations downgraded 75 to 99 pct                                     
                                                                                                                                                            Parallel operations downgraded to serial                                        
                                                                                                                                                            Parallel operations not downgraded                                              
                                                                                                                                                            parse count (describe)                                                          
                                                                                                                                                            parse count (failures)                                                          
                                                                                                                                                            parse count (hard)                                                              
                                                                                                                                                            parse count (total)                                                             
                                                                                                                                                            parse time cpu                                                                  
                                                                                                                                                            parse time elapsed                                                              
                                                                                                                                                            physical read bytes                                                             
                                                                                                                                                            physical read flash cache hits                                                  
                                                                                                                                                            physical read IO requests                                                       
                                                                                                                                                            physical read partial requests                                                  
                                                                                                                                                            physical read requests optimized                                                
                                                                                                                                                            physical read total bytes                                                       
                                                                                                                                                            physical read total bytes optimized                                             
                                                                                                                                                            physical read total IO requests                                                 
                                                                                                                                                            physical read total multi block requests                                        
                                                                                                                                                            physical reads                                                                  
                                                                                                                                                            physical reads cache                                                            
                                                                                                                                                            physical reads cache for securefile flashback block new                         
                                                                                                                                                            physical reads cache prefetch                                                   
                                                                                                                                                            physical reads direct                                                           
                                                                                                                                                            physical reads direct (lob)                                                     
                                                                                                                                                            physical reads direct for securefile flashback block new                        
                                                                                                                                                            physical reads direct temporary tablespace                                      
                                                                                                                                                            physical reads for flashback new                                                
                                                                                                                                                            physical reads prefetch warmup                                                  
                                                                                                                                                            physical reads retry corrupt                                                    
                                                                                                                                                            physical write bytes                                                            
                                                                                                                                                            physical write IO requests                                                      
                                                                                                                                                            physical write partial requests                                                 
                                                                                                                                                            physical write request redirties                                                
                                                                                                                                                            physical write requests optimized                                               
                                                                                                                                                            physical write total bytes                                                      
                                                                                                                                                            physical write total bytes optimized                                            
                                                                                                                                                            physical write total IO requests                                                
                                                                                                                                                            physical write total multi block requests                                       
                                                                                                                                                            physical writes                                                                 
                                                                                                                                                            physical writes direct                                                          
                                                                                                                                                            physical writes direct (lob)                                                    
                                                                                                                                                            physical writes direct temporary tablespace                                     
                                                                                                                                                            physical writes from cache                                                      
                                                                                                                                                            physical writes non checkpoint                                                  
                                                                                                                                                            pinned buffers inspected                                                        
                                                                                                                                                            pinned cursors current                                                          
                                                                                                                                                            prefetch clients - 16k                                                          
                                                                                                                                                            prefetch clients - 2k                                                           
                                                                                                                                                            prefetch clients - 32k                                                          
                                                                                                                                                            prefetch clients - 4k                                                           
                                                                                                                                                            prefetch clients - 8k                                                           
                                                                                                                                                            prefetch clients - default                                                      
                                                                                                                                                            prefetch clients - keep                                                         
                                                                                                                                                            prefetch clients - recycle                                                      
                                                                                                                                                            prefetch warmup blocks aged out before use                                      
                                                                                                                                                            prefetch warmup blocks flushed out before use                                   
                                                                                                                                                            prefetched blocks aged out before use                                           
                                                                                                                                                            process last non-idle time                                                      
                                                                                                                                                            PX local messages recv'd                                                        
                                                                                                                                                            PX local messages sent                                                          
                                                                                                                                                            PX remote messages recv'd                                                       
                                                                                                                                                            PX remote messages sent                                                         
                                                                                                                                                            queries parallelized                                                            
                                                                                                                                                            queue flush                                                                     
                                                                                                                                                            queue ocp pages                                                                 
                                                                                                                                                            queue position update                                                           
                                                                                                                                                            queue qno pages                                                                 
                                                                                                                                                            queue single row                                                                
                                                                                                                                                            queue splits                                                                    
                                                                                                                                                            queue update without cp update                                                  
                                                                                                                                                            read-only violation count                                                       
                                                                                                                                                            recieve buffer unavailable                                                      
                                                                                                                                                            recovery array read time                                                        
                                                                                                                                                            recovery array reads                                                            
                                                                                                                                                            recovery block gets from cache                                                  
                                                                                                                                                            recovery blocks read                                                            
                                                                                                                                                            recovery blocks read for lost write detection                                   
                                                                                                                                                            recovery blocks skipped lost write checks                                       
                                                                                                                                                            recovery marker                                                                 
                                                                                                                                                            recursive aborts on index block reclamation                                     
                                                                                                                                                            recursive calls                                                                 
                                                                                                                                                            recursive cpu usage                                                             
                                                                                                                                                            recursive system API invocations                                                
                                                                                                                                                            redo blocks checksummed by FG (exclusive)                                       
                                                                                                                                                            redo blocks checksummed by LGWR                                                 
                                                                                                                                                            redo blocks read for recovery                                                   
                                                                                                                                                            redo blocks written                                                             
                                                                                                                                                            redo blocks written (group 0)                                                   
                                                                                                                                                            redo blocks written (group 1)                                                   
                                                                                                                                                            redo blocks written (group 2)                                                   
                                                                                                                                                            redo blocks written (group 3)                                                   
                                                                                                                                                            redo blocks written (group 4)                                                   
                                                                                                                                                            redo blocks written (group 5)                                                   
                                                                                                                                                            redo blocks written (group 6)                                                   
                                                                                                                                                            redo blocks written (group 7)                                                   
                                                                                                                                                            redo buffer allocation retries                                                  
                                                                                                                                                            redo entries                                                                    
                                                                                                                                                            redo entries for lost write detection                                           
                                                                                                                                                            redo k-bytes read for recovery                                                  
                                                                                                                                                            redo k-bytes read for terminal recovery                                         
                                                                                                                                                            redo KB read                                                                    
                                                                                                                                                            redo KB read (memory)                                                           
                                                                                                                                                            redo KB read (memory) for transport                                             
                                                                                                                                                            redo KB read for transport                                                      
                                                                                                                                                            redo log space requests                                                         
                                                                                                                                                            redo log space wait time                                                        
                                                                                                                                                            redo ordering marks                                                             
                                                                                                                                                            redo size                                                                       
                                                                                                                                                            redo size for direct writes                                                     
                                                                                                                                                            redo size for lost write detection                                              
                                                                                                                                                            redo subscn max counts                                                          
                                                                                                                                                            redo synch long waits                                                           
                                                                                                                                                            redo synch poll writes                                                          
                                                                                                                                                            redo synch polls                                                                
                                                                                                                                                            redo synch time                                                                 
                                                                                                                                                            redo synch time (usec)                                                          
                                                                                                                                                            redo synch time overhead (usec)                                                 
                                                                                                                                                            redo synch time overhead count (  2ms)                                          
                                                                                                                                                            redo synch time overhead count (  8ms)                                          
                                                                                                                                                            redo synch time overhead count ( 32ms)                                          
                                                                                                                                                            redo synch time overhead count (128ms)                                          
                                                                                                                                                            redo synch time overhead count (inf)                                            
                                                                                                                                                            redo synch writes                                                               
                                                                                                                                                            redo wastage                                                                    
                                                                                                                                                            redo write broadcast ack count                                                  
                                                                                                                                                            redo write broadcast ack time                                                   
                                                                                                                                                            redo write broadcast lgwr post count                                            
                                                                                                                                                            redo write info find                                                            
                                                                                                                                                            redo write info find fail                                                       
                                                                                                                                                            redo write size count (   4KB)                                                  
                                                                                                                                                            redo write size count (   8KB)                                                  
                                                                                                                                                            redo write size count (  16KB)                                                  
                                                                                                                                                            redo write size count (  32KB)                                                  
                                                                                                                                                            redo write size count (  64KB)                                                  
                                                                                                                                                            redo write size count ( 128KB)                                                  
                                                                                                                                                            redo write size count ( 256KB)                                                  
                                                                                                                                                            redo write size count ( 512KB)                                                  
                                                                                                                                                            redo write size count (1024KB)                                                  
                                                                                                                                                            redo write size count (inf)                                                     
                                                                                                                                                            redo write time                                                                 
                                                                                                                                                            redo writes                                                                     
                                                                                                                                                            redo writes (group 0)                                                           
                                                                                                                                                            redo writes (group 1)                                                           
                                                                                                                                                            redo writes (group 2)                                                           
                                                                                                                                                            redo writes (group 3)                                                           
                                                                                                                                                            redo writes (group 4)                                                           
                                                                                                                                                            redo writes (group 5)                                                           
                                                                                                                                                            redo writes (group 6)                                                           
                                                                                                                                                            redo writes (group 7)                                                           
                                                                                                                                                            redo writes adaptive all                                                        
                                                                                                                                                            redo writes adaptive worker                                                     
                                                                                                                                                            remote Oradebug requests                                                        
                                                                                                                                                            Requests to/from client                                                         
                                                                                                                                                            rollback changes - undo records applied                                         
                                                                                                                                                            rollbacks only - consistent read gets                                           
                                                                                                                                                            root node splits                                                                
                                                                                                                                                            RowCR - resume                                                                  
                                                                                                                                                            RowCR - row contention                                                          
                                                                                                                                                            RowCR attempts                                                                  
                                                                                                                                                            RowCR hits                                                                      
                                                                                                                                                            rows fetched via callback                                                       
                                                                                                                                                            scheduler wait time                                                             
                                                                                                                                                            securefile add dedupd lob to set                                                
                                                                                                                                                            securefile allocation bytes                                                     
                                                                                                                                                            securefile allocation chunks                                                    
                                                                                                                                                            securefile bytes cleartext                                                      
                                                                                                                                                            securefile bytes deduplicated                                                   
                                                                                                                                                            securefile bytes encrypted                                                      
                                                                                                                                                            securefile bytes non-transformed                                                
                                                                                                                                                            securefile compressed bytes                                                     
                                                                                                                                                            securefile create dedup set                                                     
                                                                                                                                                            securefile dedup callback oper final                                            
                                                                                                                                                            securefile dedup fits inline                                                    
                                                                                                                                                            securefile dedup flush too low                                                  
                                                                                                                                                            securefile dedup hash collision                                                 
                                                                                                                                                            securefile dedup prefix hash match                                              
                                                                                                                                                            securefile dedup wapp cache miss                                                
                                                                                                                                                            securefile destroy dedup set                                                    
                                                                                                                                                            securefile direct read bytes                                                    
                                                                                                                                                            securefile direct read ops                                                      
                                                                                                                                                            securefile direct write bytes                                                   
                                                                                                                                                            securefile direct write ops                                                     
                                                                                                                                                            securefile inode ioreap time                                                    
                                                                                                                                                            securefile inode read time                                                      
                                                                                                                                                            securefile inode write time                                                     
                                                                                                                                                            securefile number of flushes                                                    
                                                                                                                                                            securefile number of non-transformed flushes                                    
                                                                                                                                                            securefile reject deduplication                                                 
                                                                                                                                                            securefile rmv from dedup set                                                   
                                                                                                                                                            securefile uncompressed bytes                                                   
                                                                                                                                                            SecureFiles Copy from DBFS Link                                                 
                                                                                                                                                            SecureFiles DBFS Link Operations                                                
                                                                                                                                                            SecureFiles DBFS Link Overwrites                                                
                                                                                                                                                            SecureFiles DBFS Link streaming reads                                           
                                                                                                                                                            SecureFiles Get DBFS Link Reference                                             
                                                                                                                                                            SecureFiles Implicit Copy from DBFS Link                                        
                                                                                                                                                            SecureFiles Move to DBFS Link                                                   
                                                                                                                                                            SecureFiles Put DBFS Link Reference                                             
                                                                                                                                                            segment cfs allocations                                                         
                                                                                                                                                            segment chunks allocation from disepnser                                        
                                                                                                                                                            segment dispenser allocations                                                   
                                                                                                                                                            segment dispenser load empty                                                    
                                                                                                                                                            segment dispenser load tasks                                                    
                                                                                                                                                            segment prealloc bytes                                                          
                                                                                                                                                            segment prealloc ops                                                            
                                                                                                                                                            segment prealloc tasks                                                          
                                                                                                                                                            segment prealloc time (ms)                                                      
                                                                                                                                                            segment prealloc ufs2cfs bytes                                                  
                                                                                                                                                            segment total chunk allocation                                                  
                                                                                                                                                            serializable aborts                                                             
                                                                                                                                                            session connect time                                                            
                                                                                                                                                            session cursor cache count                                                      
                                                                                                                                                            session cursor cache hits                                                       
                                                                                                                                                            session logical reads                                                           
                                                                                                                                                            session logical reads in local numa group                                       
                                                                                                                                                            session logical reads in remote numa group                                      
                                                                                                                                                            session pga memory                                                              
                                                                                                                                                            session pga memory max                                                          
                                                                                                                                                            session stored procedure space                                                  
                                                                                                                                                            session uga memory                                                              
                                                                                                                                                            session uga memory max                                                          
                                                                                                                                                            shared hash latch upgrades - no wait                                            
                                                                                                                                                            shared hash latch upgrades - wait                                               
                                                                                                                                                            shared io pool buffer get failure                                               
                                                                                                                                                            shared io pool buffer get success                                               
                                                                                                                                                            slave propagated tracked transactions                                           
                                                                                                                                                            SMON posted for dropping temp segment                                           
                                                                                                                                                            SMON posted for instance recovery                                               
                                                                                                                                                            SMON posted for txn recovery for other instances                                
                                                                                                                                                            SMON posted for undo segment recovery                                           
                                                                                                                                                            SMON posted for undo segment shrink                                             
                                                                                                                                                            sorts (disk)                                                                    
                                                                                                                                                            sorts (memory)                                                                  
                                                                                                                                                            sorts (rows)                                                                    
                                                                                                                                                            space was found by tune down                                                    
                                                                                                                                                            space was not found by tune down                                                
                                                                                                                                                            spare statistic 1                                                               
                                                                                                                                                            spare statistic 2                                                               
                                                                                                                                                            spare statistic 3                                                               
                                                                                                                                                            spare statistic 4                                                               
                                                                                                                                                            sql area evicted                                                                
                                                                                                                                                            sql area purged                                                                 
                                                                                                                                                            SQL*Net roundtrips to/from client                                               
                                                                                                                                                            SQL*Net roundtrips to/from dblink                                               
                                                                                                                                                            steps of tune down ret. in space pressure                                       
                                                                                                                                                            storage index soft misses in bytes                                              
                                                                                                                                                            Streaming No-Stall Reap                                                         
                                                                                                                                                            Streaming Stall Reap                                                            
                                                                                                                                                            summed dirty queue length                                                       
                                                                                                                                                            switch current to new buffer                                                    
                                                                                                                                                            table fetch by rowid                                                            
                                                                                                                                                            table fetch continued row                                                       
                                                                                                                                                            table scan blocks gotten                                                        
                                                                                                                                                            table scan rows gotten                                                          
                                                                                                                                                            table scans (cache partitions)                                                  
                                                                                                                                                            table scans (direct read)                                                       
                                                                                                                                                            table scans (long tables)                                                       
                                                                                                                                                            table scans (rowid ranges)                                                      
                                                                                                                                                            table scans (short tables)                                                      
                                                                                                                                                            TBS Extension: bytes extended                                                   
                                                                                                                                                            TBS Extension: files extended                                                   
                                                                                                                                                            TBS Extension: tasks created                                                    
                                                                                                                                                            TBS Extension: tasks executed                                                   
                                                                                                                                                            temp space allocated (bytes)                                                    
                                                                                                                                                            total cf enq hold time                                                          
                                                                                                                                                            total number of cf enq holders                                                  
                                                                                                                                                            total number of slots                                                           
                                                                                                                                                            total number of times SMON posted                                               
                                                                                                                                                            total number of undo segments dropped                                           
                                                                                                                                                            tracked rows                                                                    
                                                                                                                                                            tracked transactions                                                            
                                                                                                                                                            transaction lock background get time                                            
                                                                                                                                                            transaction lock background gets                                                
                                                                                                                                                            transaction lock foreground requests                                            
                                                                                                                                                            transaction lock foreground wait time                                           
                                                                                                                                                            transaction rollbacks                                                           
                                                                                                                                                            transaction tables consistent read rollbacks                                    
                                                                                                                                                            transaction tables consistent reads - undo records applied                      
                                                                                                                                                            tune down retentions in space pressure                                          
                                                                                                                                                            undo change vector size                                                         
                                                                                                                                                            undo segment header was pinned                                                  
                                                                                                                                                            user calls                                                                      
                                                                                                                                                            user commits                                                                    
                                                                                                                                                            user I/O wait time                                                              
                                                                                                                                                            user rollbacks                                                                  
                                                                                                                                                            very large tracked transactions                                                 
                                                                                                                                                            workarea executions - multipass                                                 
                                                                                                                                                            workarea executions - onepass                                                   
                                                                                                                                                            workarea executions - optimal                                                   
                                                                                                                                                            workarea memory allocated                                                       
                                                                                                                                                            Workload Capture: dbtime                                                        
                                                                                                                                                            Workload Capture: errors                                                        
                                                                                                                                                            Workload Capture: size (in bytes) of recording                                  
                                                                                                                                                            Workload Capture: unreplayable user calls                                       
                                                                                                                                                            Workload Capture: unsupported user calls                                        
                                                                                                                                                            Workload Capture: user calls                                                    
                                                                                                                                                            Workload Capture: user calls flushed                                            
                                                                                                                                                            Workload Capture: user logins                                                   
                                                                                                                                                            Workload Capture: user txns                                                     
                                                                                                                                                            Workload Replay: dbtime                                                         
                                                                                                                                                            Workload Replay: deadlocks resolved                                             
                                                                                                                                                            Workload Replay: network time                                                   
                                                                                                                                                            Workload Replay: think time                                                     
                                                                                                                                                            Workload Replay: time gain                                                      
                                                                                                                                                            Workload Replay: time loss                                                      
                                                                                                                                                            Workload Replay: user calls                                                     
                                                                                                                                                            write clones created for recovery                                               
                                                                                                                                                            write clones created in background                                              
                                                                                                                                                            write clones created in foreground                                              
                                                                                                            
                                                                                                            
                                                                                                            
                                                                                                            
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                                        
                                                                                                                                                       
                                                                                                                                                       