BENCHMARK IO TOOLS:
================
diskspd
================

diskspd –b8K –d60 –o32 –t8 –h –r –w25 –L -W –Z1G –c20G E:\iotest.dat > DiskSpeedResults.txt

-b8k – Use a 8k I/O size. For this test, we wanted to simulate SQL Server read ahead performance.
-d60 – Run for 60 seconds. I’m lazy and don’t like to wait.
-o32 – 32 outstanding I/O requests. This is your queue depth 32.
-h – This disables both hardware and software buffering. SQL Server does this, so we want to be the same.
-L – Grab disk latency numbers. You know, just because.
-t8 – Use 8 threads per file. We only have one file, but we have 8 cores.
-W   – Warm up the workload for 5 seconds.
-w25  – No writes, just reads. We’re pretending this is a data warehouse.For example, –w25 means 25% writes, 75% reads
-Z	Workload test write source buffer size, specified as (K/M/G). Used to supply random data for writes, which is a good idea for SQL Server testing
-r   - Random or sequential flag. If –r is used random tests are done, otherwise sequential tests are done

D:\temp\test.dat – our sample file. You could create a sample file (or files) by runningdiskspd with the -c<size> flag.
> output.txt – I used output redirection to send the output to a file instead of my screen.


multiple files/luns :  diskspd -b2M -d60 -o32 -h -L -t56 -W -w0 file1.dat file2.dat file3.dat > output.txt
======================================================================================
CrystalDiskMark 3.0.4 x64 (C) 2007-2015 hiyohiyo
                           Crystal Dew World : http://crystalmark.info/
======================================================================================
* MB/s = 1,000,000 byte/s [SATA/300 = 300,000,000 byte/s]
           Sequential Read :    85.459 MB/s
          Sequential Write :    80.332 MB/s
         Random Read 512KB :    26.024 MB/s
        Random Write 512KB :    13.415 MB/s
    Random Read 4KB (QD=1) :     0.288 MB/s [    70.4 IOPS]
   Random Write 4KB (QD=1) :     0.534 MB/s [   130.4 IOPS]
   Random Read 4KB (QD=32) :     0.428 MB/s [   104.4 IOPS]
  Random Write 4KB (QD=32) :     0.391 MB/s [    95.6 IOPS]

Test : 1000 MB [C: 62.2% (289.6/465.8 GB)] (x5) Date : 2017/02/21 10:32:36


 DiskSpd Batch powershell:
 
 PS C:\diskspd> ./DiskSpdBatch.ps1 -TIME 30 -DataFile "e:\diskspdtest.dat"  -DataFileSize "8092"  -BlockSize "8K"  -OutPath "c:temp"  -SplitIO "False" -AllowIdle "False" -DiskspdExe "D:\Medisolution\tools\diskspd\x86fre"
 
 Parameter	Description                                                                                                                                        
 -Time	Duration for each test cycle, measured in seconds                                                                                                         
 -DataFile	Path and filename for the workload file                                                                                                           
 -DataFileSize	Workload file size, in the format “500M” for 500MB, or “10G” for 10GB                                                                             
 -BlockSize	NTFS target workload block size, in the format “4K” for 4KB, or “1M” for 1MB                                                                      
 -OutPath	Results output file location (output file is automatically named)                                                                                 
 -SplitIO	“True” tests permutations of read and write tests in the same test cycle, in increments of 10%. “False” only tests 100% read or write test cycles.
 -AllowIdle	So as not to overwhelm a storage device’s ability to flush inbound I/O to disk, pause for 20 seconds between test cycles                          
 -EntropySize	Add random data instead of zeroes to the workload file to simulate more real-world test examples, in the format “1G” for 1GB                      