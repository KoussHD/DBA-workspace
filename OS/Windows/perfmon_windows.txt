
 IT Professionals can use this knowledge to determine their current IOPS consumption on their Windows application servers, 
 or just use it as a diagnostic tool on their Windows application servers to monitor their current IOPS load of their existing storage array
===============
PerfMon Procedure – Collecting data for IOPS measurement
=======================
1 For the complete background information on how to create a data collection set, please refer to Microsoft TechNet – Windows Performance Monitor – Create a Data Collector Set from Performance Monitor
2 Run perfmon.exe
 Proceed to \Performance\Data Collector Sets\User Defined
4 Move the Mouse to the right field, Right Click, New Data Collector
5 Name the new data collector and set the type to “Performance Counter Data Collector”, and click Next.
6 Under Performance Counters, select the following values and proceed to the next wizard.
  Counters
a\Processor Information\%Processor Time
b\Memory\Available Mbytes
c\Logical Disk\
 Avg Disk Bytes/Read
 Avg Disk Bytes/Transfer
 Avg Disk Bytes/Write
 Avg Disk Sec/Read
 Avg Disk Sec/Transfer
 Avg Disk Sec/Write
 Current Disk Queue
 Disk Bytes/Sec
 Disk Read Bytes/Sec
 Disk Reads/Sec
 Disk Transfers/Sec
 Disk Write Bytes/Sec
 Disk Writes/Sec
d Hardware to be collected
    Processor Information
     Select the Total CPU
        Disk
7 Select the correct disk to determine IOPS Load
8 Set Sample Interval to 1 Second and proceed to the next page of the wizard
9 Enable “Open properties for this data collector” and click finish
10 On the next window, set the Log format to Comma Separated Values
11 Enable Maximum Samples, set to 86500
This is 24 Hours recording period, with an extra 100 seconds as an overhead. 24 hours is the minimum for this data collection – but for the best analysis, analyzing the IOPS load throughout an entire week is recommended. Some articles have recommended an entire month – but I believe this to be a bit excessive given the number of samples that this is gathering. I believe gathering data every second is needed, as it’s the best “resolution” for this data analysis.
If sticking with the bare minimum analysis, it’s best to use a day where the most of the traffic is experienced on the Application server, such as on a Monday when everyone is returning from the weekend.
12 Click apply
The file will be saved under the default path of C:\PerfLogs\Admin\[CounterName]
13 Close the counter properties and run the counter.

===================================================

Oracle Counters to Windows Performance Monitor  
============================================

Oracle administration assistant for windows 

Oracle perf counters for windows 
D:\> ORACLE_HOME\bin\operfcfg.exe
Enter user-name: system
Enter password: password
Enter tns-alias: orcl
operfcfg: New registry values have been successfully set.
If you run the following command, then operfcfg.exe does not prompt for a password:

operfcfg.exe -U user_name -D tns_alias
The -U and -D commands are optional.

The following examples illustrate use of operfcfg. First, to change user name to dba_admin and leave database name at its current value, you would enter:

C:\> operfcfg -U dba_admin
To change user name to dba_admin and database name to prod, you would enter:

C:\> operfcfg -U dba_admin -D prod
In the final example, you change host name to a blank value, causing Oracle Counters for Windows Performance Monitor to connect to the default database on the computer. 
The current user name and password must be valid user accounts on this database. 
Enter:
C:\> operfcfg -D 

===GUI
From the Start menu, select Programs, then select Oracle - HOME_NAME, then select Configuration and Migration Tools, and then select Administration Assistant for Windows.

Oracle Administration Assistant for Windows starts.

Right-click Performance Monitor.

Click Properties.

The Performance Monitor Properties dialog appears.

Modify the text in the Username, Password, or Database fields.

Click Apply.