sqlcmd /?
Microsoft (R) SQL Server Command Line Tool
Version 10.50.4042.0 NT x64
Copyright (c) Microsoft Corporation.  All rights reserved.

usage: Sqlcmd            [-U login id]          [-P password]
  [-S server]            [-H hostname]          [-E trusted connection/ connect to SQL Server Database Engine using Windows Integrated Security]
  [-N Encrypt Connection][-C Trust Server Certificate]
  [-d use database name] [-l login timeout]     [-t query timeout]
  [-h headers]           [-s colseparator]      [-w screen width]
  [-a packetsize]        [-e echo input]        [-I Enable Quoted Identifiers]
  [-c cmdend]            [-L[c] list servers[clean output]]
  [-q "cmdline query"]   [-Q "cmdline query" and exit]
  [-m errorlevel]        [-V severitylevel]     [-W remove trailing spaces]
  [-u unicode output]    [-r[0|1] msgs to stderr]
  [-i inputfile  -i"file 1.sql","file 2.sql"]         [-o outputfile]        [-z new password]
  [-f <codepage> | i:<codepage>[,o:<codepage>]] [-Z new password and exit]
  [-k[1|2] remove[replace] control characters]
  [-y variable length type display width]
  [-Y fixed length type display width]
  [-p[1] print statistics[colon format]]
  [-R use client regional setting]
  [-b On error batch abort]
  [-v var = "value"...]  [-A dedicated admin connection]
  [-X[1] disable commands, startup script, enviroment variables [and exit]]
  [-x disable variable substitution]
  [-? show syntax summary]
  
  Just for reference, here are the switches, so you don't have to look it all up on MSDN!

-U	login id	-P	password
-S	server	        -H	hostname
-E	trusted connection	       -d	use database name
-l	login timeout	-t	query timeout
-h	headers	        -s	colseparator
-w	screen width	-a	packetsize
-e	echo input	-I	Enable Quoted Identifiers
-c	cmdend	        -L	list servers
-LC	list servers clean output	-q	"cmdline query"
-Q	"cmdline query" and exit	-m	errorlevel
-V	severitylevel	-W	remove trailing spaces
-u	unicode output	-r(0|1)	msgs to stderr
-i	inputfile	-o	outputfile
-z	new password	-f	<codepage> | i:<codepage>(,o:<codepage>)
-K1|2]	remove[replace] control characters]	-Z	new password and exit
-k(1|2)	remove(replace) control characters	-y	variable length type display width
-Y	fixed length type display width	-p(1)	print statistics (colon format)
-R	use client regional setting	-b	On error batch abort
-v	var = "value"...	        -A	dedicated admin connection
-X(1)	disable commands, startup script, enviroment variables (and exit)	-x	disable variable substitution
 
  sqlcmd -S localhost\sqlsrv2012 -d AdventureWorks2012 -i C:\DataFiles\EmployeeQuery2.sql -v type="em" name="smith" -o C:\DataFiles\Employees2.txt
 ===================================
        MACRO
 =================================== 
  
  
:listvar --list all variables
SQLCMDHEADERS = “0”                   400    -- "page size"
SQLCMDCOLWIDTH = “0”                  150     -- line width
SQLCMDMAXFIXEDTYPEWIDTH = “0”          40     -- max column width (fixed length)      
SQLCMDMAXVARTYPEWIDTH = “256”          32     -- max column width (varying length)
SQLCMDDBNAME = “”
SQLCMDEDITOR = “notepad.exe”
SQLCMDERRORLEVEL = “0”
SQLCMDCOLSEP = ” ”
SQLCMDINI = “c:\initial.sql”
SQLCMDLOGINTIMEOUT = “8”         
SQLCMDPACKETSIZE = “4096”
SQLCMDSERVER = “MyServer”
SQLCMDSTATTIMEOUT = “0”
SQLCMDUSER = “”
SQLCMDWORKSTATION = “MyWorkstation”
 
:setvar ---set variables
:setvar myusername test
:setvar myservername myserver
:connect $(myservername) $(myusername)
:connect myserver\instance1.

Command                                                          Description
-------------------------------------------------------------  -------------------------------------------
:!! [<command>]                                                 -Executes a command in the Windows command shell.
:connect server[\instance] [-l timeout] [-U user [-P password]] -Connects to a SQL Server instance.
:ED                                                             -Edits the current or last executed statement cache.
:error <dest>                                                   -Redirects error output to a file, stderr, or stdout.
:exit                                                           -Quits sqlcmd immediately.
:exit()                                                         -Execute statement cache; quit with no return value.
:exit(<query>)                                                  -Execute the specified query; returns numeric result.
go [<n>]                                                        -Executes the statement cache (n times).
:help                                                           -Shows this list of commands.
:list                                                           -Prints the content of the statement cache.
:listvar                                                        -Lists the set sqlcmd scripting variables.
:on error [exit|ignore]                                         -Action for batch or sqlcmd command errors.
:out <filename>|stderr|stdout                                   -Redirects query output to a file, stderr, or stdout.
:perftrace <filename>|stderr|stdout                             -Redirects timing output to a file, stderr, or stdout.
:quit                                                           -Quits sqlcmd immediately.
:r <filename>                                                   -Append file contents to the statement cache.
:reset                                                          -Discards the statement cache.
:serverlist                                                     -Lists local and SQL Servers on the network.
:setvar {variable}                                              -Removes a sqlcmd scripting variable.
:setvar <variable> <value>                                      -Sets a sqlcmd scripting variable.






- Some of these commands are extremely useful, others will make you scratch your head in puzzlement. 
the ones that work in 'SQLCMD mode' within SSMS are:
[!!:]GO[count] 
!! <command> 
:exit(statement) 
:Quit 
:r <filename> 
:setvar <var> <value> 
:connect server[\instance] [-l login_timeout] [-U user [-P password]] 
:on error [ignore|exit] 
:error <filename>|stderr|stdout 
:out <filename>|stderr|stdout